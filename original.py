import streamlit as st
from datetime import datetime
import pandas as pd
import io
from xhtml2pdf import pisa
import tempfile
import os
import base64
import cv2
import mediapipe as mp
import numpy as np
import matplotlib.pyplot as plt
import plotly.graph_objs as go
import paho.mqtt.client as mqtt
import threading
import time
from collections import deque
import math
from PIL import Image
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont


st.set_page_config(page_title="‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏£‡∏µ‡∏©‡∏∞", layout="wide")
st.title("‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏£‡∏µ‡∏©‡∏∞")
st.markdown("‡∏Å‡∏£‡∏ì‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ")

st.markdown("""
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
<style>
    html, body {
        font-family: 'Roboto', sans-serif;
        background: linear-gradient(120deg, #f0f9ff, #e0f7fa);
        color: #1e293b;
        scroll-behavior: smooth;
    }
    h1, h2, h3 {
        color: #0f172a;
    }
    .sidebar .sidebar-content {
        background-color: #e0f2f1;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }
    .feature-card {
        background: linear-gradient(145deg, #ffffff, #f1f5f9);
        border: 1px solid #e2e8f0;
        padding: 1.5rem;
        border-radius: 16px;
        box-shadow: 0 15px 25px rgba(0,0,0,0.1);
        transition: all 0.3s ease-in-out;
        transform: perspective(1000px);
    }
    .feature-card:hover {
        transform: translateY(-6px) scale(1.02);
        box-shadow: 0 25px 35px rgba(0,0,0,0.15);
    }
    .video-container {
        display: flex;
        justify-content: center;
        margin: 2rem 0;
    }
    .infographic {
        margin-top: 2rem;
        padding: 2rem;
        border-radius: 16px;
        background: #ffffffaa;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    }
    .infographic h4 {
        color: #0284c7;
        margin-bottom: 1rem;
    }
    ul li::marker {
        color: #38bdf8;
    }
    .hero-title {
        font-size: 3.5rem;
        font-weight: 700;
        color: #0f172a;
        text-align: center;
        margin-top: 1rem;
    }
    .hero-subtitle {
        font-size: 1.4rem;
        font-weight: 400;
        text-align: center;
        color: #334155;
        margin-bottom: 2rem;
    }
    .glass-card {
    background: rgba(255, 255, 255, 0.15);
    border-radius: 16px;
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    padding: 1.5rem;
    color: #0f172a;
}
</style>
""", unsafe_allow_html=True)

tab1, tab2, tab3, tab4, tab5, tab6, tab7, tab8, tab9, tab10, tab11, tab12 = st.tabs(["1. Home and About Project",
    "2.‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô", "3.‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏£‡∏µ‡∏©‡∏∞ ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏£‡∏µ‡∏©‡∏∞‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á? (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì)", 
    "4.‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤", "5.‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô",
    "6.‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏° ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏£‡πà‡∏ß‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì)", "7.‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡πà‡∏ß‡∏¢", 
    "8.‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏¢‡πà‡∏•‡∏á?", "9.‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô", "10.‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô", "11.Eye Tracking","12.Motion Tracking"
])

with tab1:
    st.header("Welcome to Spin Smart Check")
    st.markdown("""
    <style>
    .guide-card {
    background: rgba(255,255,255,0.25);
    border-radius:18px;
    box-shadow:0 8px 32px rgba(31,38,135,.15);
    backdrop-filter:blur(12px);
    -webkit-backdrop-filter:blur(12px);
    border:1px solid rgba(255,255,255,0.18);
    padding:2.5rem;
    margin-bottom:32px;
    color:#0f172a;
    font-size:1.4rem !important;
    line-height:1.8rem;
    }
    .guide-card h1 {
    font-size:2.8rem !important;
    margin-bottom:1.2rem;
    color:#0f172a;
    font-weight:800;
    }
    .guide-card ul {
    padding-left:2rem;
    margin:0;
    }
    .guide-card li {
    margin:10px 0;
    font-size:1.4rem;
    }
    .guide-card li::marker {
    color:#38bdf8;
    font-size:1.6rem;
    }
    .notice-red {
    font-size:1.6rem;
    color:#b91c1c;
    font-weight:900;
    margin-top:2.2rem;
    text-align:center;
    }
    </style>

    <div class="guide-card">
    <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å (Tab 1)</h1>
    <ul>
        <li>üß† ‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö <strong>Spin Smart Check</strong> ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå</li>
        <li>üé• ‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢</li>
        <li>üñºÔ∏è ‡∏î‡∏π Infographics ‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÇ‡∏£‡∏Ñ ‡πÄ‡∏ä‡πà‡∏ô BPPV, Vestibular</li>
        <li>‚ú® ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏î‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡πÉ‡∏ä‡πâ IMU Sensor + ‡∏Å‡∏•‡πâ‡∏≠‡∏á + AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå</li>
        <li>üó£Ô∏è ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à</li>
    </ul>

    <p class="notice-red">üîª ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà <strong>Tab 2: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</strong></p>
    </div>
    """, unsafe_allow_html=True)



    st.markdown("""
    <div class="glass-card">
        <h3>üè• Why Spin Smart Check?</h3>
        <p>Spin Smart Check is an intelligent system designed to monitor head movements and eye gaze using IMU and camera data. It empowers healthcare and assistive applications through real-time analysis, visualization, and machine learning.</p>
    </div>
    """, unsafe_allow_html=True)
    image_path = r"C:\Users\Asus\OneDrive\Desktop\Spin-Smart-Check\S__4710416.jpg"
    image = Image.open(image_path)
    resized_image = image.resize((1000, 1000))  # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    # center the image in the Streamlit app
    st.markdown("<div style='text-align: center;'><h1 class='hero-title'>Spin Smart Check</h1></div>", unsafe_allow_html=True)
    # ‚úÇÔ∏è ‡∏ï‡∏±‡∏î‡∏Ç‡∏≠‡∏ö‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡πà‡∏≤‡∏á (crop)
    # (left, upper, right, lower)
    width, height = resized_image.size
    cropped_image = resized_image.crop((0, 200, width, height - 120))  # ‡∏ï‡∏±‡∏î‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡πà‡∏≤‡∏á 20 px
   
    st.image(cropped_image)
    
    st.header("üîç About Spin Smart Check")
    st.subheader("üß† Head Motion & Eye Gaze Insights")
    st.video("https://youtu.be/KHFdeS8D6e4?feature=shared")
    st.image(r"C:\Users\Asus\OneDrive\Desktop\Spin-Smart-Check\Picture1.png", caption="Benign Paroxysmal Positional Vertigo", use_container_width=True)

    st.markdown("""
    <div class='feature-card'>
    <h3>&#10071; Pain Points</h3>
    <ul>
        <li>Patients or elderly individuals with dizziness or balance issues often cannot perceive their own head movements accurately.</li>
        <li>Healthcare professionals lack <strong>real-time tools</strong> to monitor head motion and correlate it with eye movement behavior.</li>
        <li>Traditional systems are unable to detect early signs of balance disorders or neurological abnormalities in a precise manner.</li>
    </ul>
    </div>

    <div class='feature-card'>
    <h3>üß† Spin Smart Check ‚Äì Our Solution</h3>
    <p>Spin Smart Check is an intelligent AI-powered platform that detects head movement using a 6-axis IMU sensor and analyzes eye movement patterns to assess balance abnormalities or dizziness symptoms. The system features real-time dashboards for effective screening and diagnosis.</p>
    </div>

    <div class='feature-card'>
    <h3>üéØ Research Goals</h3>
    <ul>
        <li>Screen and analyze individuals with <strong>chronic dizziness</strong> or balance impairments</li>
        <li>Support <strong>neurological rehabilitation</strong> through precise motion tracking</li>
        <li>Enable <strong>Smart Rehabilitation Systems</strong> with AI-assisted diagnostics</li>
    </ul>
    </div>

    <div class='feature-card'>
    <h3>üß† Technologies Used</h3>
    <ul>
        <li><strong>IMU Sensors</strong> (M5StickC, MPU6886) for head motion tracking</li>
        <li><strong>Machine Learning</strong> (LSTM, Random Forest) to predict eye gaze direction</li>
        <li><strong>Real-time Data Streaming</strong> (MQTT, Threading) for live sensor feedback</li>
        <li><strong>Interactive UI</strong> (Streamlit, Plotly 3D) for visualizing head movement</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)

    
    st.markdown("""
    <style>
    .logo-section {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        gap: 30px;
        margin-top: 40px;
        margin-bottom: 30px;
    }
    .logo-section img {
        height: 50px;
        transition: filter 0.3s ease;
    }
    
    </style>

    <h3 style='text-align: center;'>üåç Built with Data and Tools from the World‚Äôs Leading AI Labs</h3>
    <div class="logo-section">
        <img src="https://www.svgrepo.com/show/306500/openai.svg">
        <img src="https://huggingface.co/front/assets/huggingface_logo.svg">
        <img src="https://www.svgrepo.com/show/353805/google-cloud.svg">
        <img src="https://upload.wikimedia.org/wikipedia/commons/7/7c/Kaggle_logo.png">
        <img src="https://www.svgrepo.com/show/303630/nvidia-logo.svg">
        <img src="https://www.svgrepo.com/show/105198/massachusetts-institute-of-technology-logotype.svg">
        <img src="https://www.svgrepo.com/show/341921/ibm.svg">
        <img src="https://www.svgrepo.com/show/303247/microsoft-azure-2-logo.svg">
        <img src="https://www.svgrepo.com/show/431122/meta.svg">
        <img src="https://www.svgrepo.com/show/448266/aws.svg">
        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Harvard_University_logo.svg/900px-Harvard_University_logo.svg.png?20240103220517">
        <img src="https://images.seeklogo.com/logo-png/44/1/streamlit-logo-png_seeklogo-441815.png">
    </div>
    """, unsafe_allow_html=True)
    
    st.markdown("""
    <style>
    .carousel-container {
        width: 100%;
        overflow: hidden;
        position: relative;
        margin: 50px auto;
        max-width: 900px;
    }
    .carousel {
        display: flex;
        animation: scroll 24s linear infinite;
    }
    .testimonial {
        min-width: 100%;
        box-sizing: border-box;
        padding: 2rem;
        background: #f1f5f9;
        border-radius: 16px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.08);
        text-align: center;
        font-size: 1.1rem;
        font-style: italic;
        color: #1e293b;
    }
    .testimonial strong {
        display: block;
        margin-top: 1rem;
        font-size: 1rem;
        font-weight: 700;
        color: #0f172a;
    }
    @keyframes scroll {
        0%   { transform: translateX(0); }
        25%  { transform: translateX(-100%); }
        50%  { transform: translateX(-200%); }
        75%  { transform: translateX(-300%); }
        100% { transform: translateX(-400%); }
    }
    </style>
    
    <h3 style='text-align: center;'>üí¨ What Our Users Say</h3>
    <div class="carousel-container">
        <div class="carousel">
            <div class="testimonial">
                ‚ÄúSpin Smart Check transforms how we monitor patient balance and eye coordination.‚Äù
                <strong>Dr. Nicha Wong, Neurologist</strong>
            </div>
            <div class="testimonial">
                ‚ÄúIMU and real-time visualization give us precise head movement tracking for rehabilitation.‚Äù
                <strong>Arthit R., Rehab Specialist</strong>
            </div>
            <div class="testimonial">
                ‚ÄúThe integration with MQTT and machine learning makes it perfect for smart health apps.‚Äù
                <strong>Patcharaporn T., IoT Engineer</strong>
            </div>
            <div class="testimonial">
                ‚ÄúOur elderly care center uses Spin Smart Check to assess dizziness and prevent falls.‚Äù
                <strong>Siriporn M., Geriatric Nurse</strong>
            </div>
            <div class="testimonial">
                ‚ÄúReliable, interactive, and medically relevant ‚Äî it‚Äôs a breakthrough for assistive technology.‚Äù
                <strong>Assoc. Prof. Dr. Kittipong S., Biomedical Engineer</strong>
            </div>
        </div>
    </div>
    """, unsafe_allow_html=True)

   
    st.markdown("---")
    
    # ‡∏´‡∏•‡∏±‡∏á CTA
    st.markdown("## üìä Real-Time Stats")
    col1, col2, col3 = st.columns(3)

    with col1:
        stat_placeholder = st.empty()
        for i in range(0, 93, 5):
            stat_placeholder.metric("üß† Detection Accuracy", f"{i}%")
            time.sleep(0.03)

    with col2:
        sample_placeholder = st.empty()
        for i in range(0, 1525, 50):
            sample_placeholder.metric("üì¶ Samples Detected", f"{i}")
            time.sleep(0.01)

    with col3:
        alert_placeholder = st.empty()
        for i in range(0, 38, 2):
            alert_placeholder.metric("üö® Alerts Triggered", f"{i}")
            time.sleep(0.05)


    st.markdown("""
    <style>
    .timeline-container {
        width: 100%;
        max-width: 1000px;
        margin: 60px auto 40px auto;
        padding: 0 10px;
    }
    .timeline {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        position: relative;
        counter-reset: step;
    }
    .timeline::before {
        content: '';
        position: absolute;
        top: 30px;
        left: 0;
        width: 100%;
        height: 4px;
        background-color: #e2e8f0;
        z-index: 0;
    }
    .step {
        position: relative;
        text-align: center;
        flex: 1;
        z-index: 1;
    }
    .step::before {
        counter-increment: step;
        content: counter(step);
        position: relative;
        display: inline-block;
        background: #38bdf8;
        color: white;
        width: 50px;
        height: 50px;
        line-height: 50px;
        border-radius: 50%;
        font-weight: bold;
        font-size: 1.2rem;
        z-index: 2;
    }
    .step-label {
        margin-top: 12px;
        font-size: 0.95rem;
        color: #0f172a;
        font-weight: 600;
    }
    </style>

    <div class="timeline-container">
    <h3 style="text-align:center;">üß≠ How FungalShield AI Works</h3>
    <div class="timeline">
        <div class="step">
            <div class="step-label">üì° IMU Sensor Streaming</div>
        </div>
        <div class="step">
            <div class="step-label">üîÅ Real-time Signal Smoothing</div>
        </div>
        <div class="step">
            <div class="step-label">üß† ML-based Head Movement Analysis</div>
        </div>
        <div class="step">
            <div class="step-label">üëÅÔ∏è Gaze Direction Prediction</div>
        </div>
        <div class="step">
            <div class="step-label">üìä Visual Dashboard Feedback</div>
        </div>
    </div>
    </div>
    """, unsafe_allow_html=True)

    st.subheader("üöÄ Key Features")
    st.markdown("""
    <div class='feature-card'>
    <ul>
        <li>üì° Real-time IMU data streaming from wearable sensors</li>
        <li>üîÅ Signal smoothing for stable and reliable measurements</li>
        <li>üß† AI-powered head motion analysis with LSTM/ML models</li>
        <li>üëÅÔ∏è Predict accurate eye-gaze direction based on head movement</li>
        <li>üìä Interactive dashboard for live visualization and data logging</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
    
    st.markdown(
    "<span style='color:#b91c1c; font-size:1.5rem; font-weight:bold;'>üîª ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 2: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</span>",
    unsafe_allow_html=True
)
    
    
with tab2:
    st.header("2. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô")
    # ---------- Instruction Card : Tab 2 ----------
    st.markdown("""
    <style>
    .guide-card {
    background: rgba(255,255,255,0.25);
    border-radius:18px;
    box-shadow:0 8px 32px rgba(31,38,135,.15);
    backdrop-filter:blur(12px);
    -webkit-backdrop-filter:blur(12px);
    border:1px solid rgba(255,255,255,0.18);
    padding:2.5rem;
    margin-bottom:32px;
    color:#0f172a;
    font-size:1.4rem !important;
    line-height:1.9rem;
    }
    .guide-card h1{
    font-size:2.8rem !important;
    margin-bottom:1.2rem;
    color:#0f172a;
    font-weight:800;
    }
    .guide-card ul{
    padding-left:2rem;
    margin:0;
    }
    .guide-card li{
    margin:10px 0;
    font-size:1.4rem;
    }
    .guide-card li::marker{
    color:#38bdf8;
    font-size:1.6rem;
    }
    </style>

    <div class="guide-card">
    <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (Tab 2)</h1>
    <ul>
        <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å <strong>‡πÄ‡∏û‡∏®</strong> ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏´‡∏ç‡∏¥‡∏á / ‡∏ä‡∏≤‡∏¢)</li>
        <li>‡∏Å‡∏£‡∏≠‡∏Å <strong>‡∏≠‡∏≤‡∏¢‡∏∏</strong> (0‚Äì120 ‡∏õ‡∏µ) ‡πÅ‡∏•‡∏∞ <strong>‡∏≠‡∏≤‡∏ä‡∏µ‡∏û</strong></li>
        <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å <strong>‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß</strong> ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ; ‡∏ñ‡πâ‡∏≤ ‚Äú‡∏≠‡∏∑‡πà‡∏ô‡πÜ‚Äù ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏∞‡∏ö‡∏∏</li>
        <li>‡∏£‡∏∞‡∏ö‡∏∏ <strong>‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡∏π‡πà</strong> ‡πÅ‡∏•‡∏∞ <strong>‡∏™‡∏≤‡∏£‡πÄ‡∏™‡∏û‡∏ï‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≤‡∏£‡∏û‡∏¥‡∏©</strong> ‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™</li>
        <li>‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà &nbsp;‚Äî&nbsp; ‡∏´‡∏≤‡∏Å ‚Äú‡πÄ‡∏Ñ‡∏¢‚Äù ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å <em>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏</em> ‡πÅ‡∏•‡∏∞ <em>‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤</em></li>
        <li>‡∏ï‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß; ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á</li>
        <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å <strong>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢</strong> (‡πÄ‡∏ä‡πà‡∏ô ‡∏¢‡∏≤‡πÉ‡∏´‡∏°‡πà ‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏®‡∏µ‡∏£‡∏©‡∏∞ ‡∏Ø‡∏•‡∏Ø)</li>
        <li><strong>‡πÄ‡∏û‡∏®‡∏´‡∏ç‡∏¥‡∏á</strong> ‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</li>
        <li>‡∏ï‡∏¥‡πä‡∏Å <strong>‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</strong> (‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏û‡∏£‡πà‡∏≤ ‡∏ä‡∏±‡∏Å ‡∏Ø‡∏•‡∏Ø) ‡∏´‡∏≤‡∏Å‡∏û‡∏ö ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏î‡πà‡∏ß‡∏ô</li>
        <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ &nbsp;‚Äî&nbsp; ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
    col1, col2 = st.columns(2)
    with col1:
        gender = st.radio("‡πÄ‡∏û‡∏®", ["‡∏´‡∏ç‡∏¥‡∏á", "‡∏ä‡∏≤‡∏¢"])
        age = st.number_input("‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ)", min_value=0, max_value=120)
        occupation = st.text_input("‡∏≠‡∏≤‡∏ä‡∏µ‡∏û")
        
    with col2:
        diseases = st.multiselect("‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß", ["‡πÑ‡∏°‡πà‡∏°‡∏µ", "‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏™‡∏π‡∏á", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏ï‡πà‡∏≥", "‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à", "‡πÑ‡∏°‡πÄ‡∏Å‡∏£‡∏ô", "‡πÇ‡∏£‡∏Ñ‡∏ó‡∏≤‡∏á‡∏™‡∏°‡∏≠‡∏á", "‡πÇ‡∏£‡∏Ñ‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
        disease_others = st.text_input("‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏£‡∏Ñ‡∏ó‡∏≤‡∏á‡∏™‡∏°‡∏≠‡∏á / ‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")
        medications = st.text_input("‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡πÉ‡∏ä‡πâ / ‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤‡∏≠‡∏∞‡πÑ‡∏£")
        substances = st.text_input("‡∏™‡∏≤‡∏£‡πÄ‡∏™‡∏û‡∏ï‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≤‡∏£‡∏û‡∏¥‡∏©‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")

    st.markdown("**‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï**")
    prev_dizzy = st.radio("‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?", ["‡πÄ‡∏Ñ‡∏¢", "‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢"])
    if prev_dizzy == "‡πÄ‡∏Ñ‡∏¢":
        dizzy_disease = st.text_input("‡∏à‡∏≤‡∏Å‡πÇ‡∏£‡∏Ñ‡∏≠‡∏∞‡πÑ‡∏£?", key="dizzy_disease")
        dizzy_time = st.text_input("‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà?", key="dizzy_time")
        
    family_history = st.radio("‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?", ["‡∏°‡∏µ", "‡πÑ‡∏°‡πà‡∏°‡∏µ"])
    # history = st.multiselect("‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢", 
    #                         ["‡πÑ‡∏°‡πà‡∏°‡∏µ", "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏ä‡∏ô‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà", "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô", "‡πÄ‡∏Ñ‡∏¢‡∏ú‡πà‡∏≤‡∏ï‡∏±‡∏î", "‡πÄ‡∏Ñ‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏â‡∏≤‡∏¢‡∏£‡∏±‡∏á‡∏™‡∏µ", "‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡∏®‡∏µ‡∏£‡∏©‡∏∞", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
    # triggers = st.multiselect("‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞", 
    #                         ["‡πÑ‡∏°‡πà‡∏°‡∏µ", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß", "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î", "‡πÅ‡∏™‡∏á‡∏™‡∏ß‡πà‡∏≤‡∏á", "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
    # symptoms = st.multiselect("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞", 
    #                         ["‡πÑ‡∏°‡πà‡∏°‡∏µ", "‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß", "‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ", "‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô", "‡∏´‡∏π‡∏≠‡∏∑‡πâ‡∏≠", "‡∏´‡∏π‡πÅ‡∏ß‡πà‡∏ß", "‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏ã‡πâ‡∏≠‡∏ô", "‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏û‡∏£‡πà‡∏≤", "‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏á‡∏ï‡∏±‡∏ß", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
    
    # ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏ä‡πâ label ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô "‡∏à‡∏≤‡∏Å‡πÇ‡∏£‡∏Ñ‡∏≠‡∏∞‡πÑ‡∏£?" ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏¢‡∏Å key
    # if prev_dizzy == "‡πÄ‡∏Ñ‡∏¢":
    #     dizzy_disease = st.text_input("‡∏à‡∏≤‡∏Å‡πÇ‡∏£‡∏Ñ‡∏≠‡∏∞‡πÑ‡∏£?", key="dizzy_disease")
        

    if family_history == "‡∏°‡∏µ":
        family_disease = st.text_input("‡∏à‡∏≤‡∏Å‡πÇ‡∏£‡∏Ñ‡∏≠‡∏∞‡πÑ‡∏£?", key="family_disease")

    # if "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏ä‡∏ô‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà" in history:
    #     new_drug = st.text_input("‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤", key="new_drug")

    # if "‡∏≠‡∏≤‡∏´‡∏≤‡∏£" in triggers:
    #     food_trigger = st.text_input("‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏´‡∏≤‡∏£", key="food_trigger1")

    # if "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" in symptoms:
    #     other_symptom = st.text_input("‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô‡πÜ", key="other_symptom")
        
        # ‡πÄ‡∏û‡∏®‡∏´‡∏ç‡∏¥‡∏á
    if gender == "‡∏´‡∏ç‡∏¥‡∏á":
        st.markdown("**‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏û‡∏®‡∏´‡∏ç‡∏¥‡∏á**")
        period_status = st.radio("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", ["‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "‡∏Ç‡∏≤‡∏î‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"], key="period_status")
        if period_status == "‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô":
            period_date = st.date_input("‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏£‡∏≠‡∏ö‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠", key="last_period_date")

    # ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ö‡πÑ‡∏õ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•
    st.markdown("**‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏µ‡∏ö‡πÑ‡∏õ‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå**")
    urgent_symptoms = st.multiselect("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏î‡∏±‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?", [
        "‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏û‡∏£‡πà‡∏≤‡∏°‡∏±‡∏ß 5.10", "‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏ã‡πâ‡∏≠‡∏ô 5.10", "‡∏û‡∏π‡∏î‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î ‡∏û‡∏π‡∏î‡∏ï‡∏¥‡∏î‡∏Ç‡∏±‡∏î 5.10",
        "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏´‡∏ö 5.10", "‡∏Å‡∏•‡∏∑‡∏ô‡∏•‡∏≥‡∏ö‡∏≤‡∏Å 5.10", "‡πÅ‡∏Ç‡∏ô‡∏Ç‡∏≤‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á 5.10", "‡∏ä‡∏≤‡πÅ‡∏Ç‡∏ô‡∏Ç‡∏≤ 5.10",
        "‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏ã ‡∏ó‡∏£‡∏á‡∏ï‡∏±‡∏ß‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ 5.17", "‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ï‡∏±‡∏ß 5.18", "‡∏ä‡∏±‡∏Å‡πÄ‡∏Å‡∏£‡πá‡∏á 5.19",
        "‡πÉ‡∏à‡∏™‡∏±‡πà‡∏ô ‡πÉ‡∏à‡∏´‡∏ß‡∏¥‡∏ß 5.20", "‡πÄ‡∏à‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å 5.20"
    ], key="urgent_symptoms")
    
    st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 3: ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞</span>",
    unsafe_allow_html=True
)
    
    with tab3:
        st.header("3. ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞")
        st.markdown("""
        <style>
        .guide-card {
        background: rgba(255,255,255,0.25);
        border-radius:18px;
        box-shadow:0 8px 32px rgba(31,38,135,.15);
        backdrop-filter:blur(12px);
        -webkit-backdrop-filter:blur(12px);
        border:1px solid rgba(255,255,255,0.18);
        padding:2.5rem;
        margin-bottom:32px;
        color:#0f172a;
        font-size:1.4rem !important;
        line-height:1.9rem;
        }
        .guide-card h1{
        font-size:2.8rem !important;
        margin-bottom:1.2rem;
        color:#0f172a;
        font-weight:800;
        }
        .guide-card ul{
        padding-left:2rem;
        margin:0;
        }
        .guide-card li{
        margin:10px 0;
        font-size:1.4rem;
        }
        .guide-card li::marker{
        color:#38bdf8;
        font-size:1.6rem;
        }
        </style>

        <div class="guide-card">
        <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ (Tab 3)</h1>
        <ul>
            <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î</li>
            <ul>
            <li>üå™ <strong>‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏´‡∏°‡∏∏‡∏ô</strong> ‚Äì ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÇ‡∏•‡∏Å‡∏´‡∏°‡∏∏‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏∏‡∏ô</li>
            <li>üåä <strong>‡πÇ‡∏Ñ‡∏•‡∏á‡πÄ‡∏Ñ‡∏•‡∏á / ‡∏•‡∏≠‡∏¢</strong> ‚Äì ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏ö‡∏ô‡πÄ‡∏£‡∏∑‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á</li>
            <li>üö∂‚Äç‚ôÇÔ∏è <strong>‡πÄ‡∏î‡∏¥‡∏ô‡πÇ‡∏ã‡πÄ‡∏ã / ‡πÄ‡∏™‡∏µ‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏á‡∏ï‡∏±‡∏ß</strong></li>
            <li>üòµ <strong>‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏∑‡∏î</strong> ‚Äì ‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏°</li>
            <li>ü§î <strong>‡∏°‡∏∂‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞</strong> ‚Äì ‡πÑ‡∏°‡πà‡∏´‡∏°‡∏∏‡∏ô‡πÅ‡∏ï‡πà‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏á‡∏á‡∏á‡∏ß‡∏¢</li>
            </ul>
            <li>‡∏´‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äú<em>‡∏≠‡∏∑‡πà‡∏ô‡πÜ</em>‚Äù ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</li>
            <li>‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ç‡πâ‡∏≠ ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏±‡∏ô</li>
            <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡πÅ‡∏¢‡∏∞‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞ (‡πÄ‡∏ä‡πà‡∏ô BPPV, Migraine)</li>
            <li>‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ Tab ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏ ‚Äú‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‚Äù</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)
        
        dizzy_types = st.multiselect("‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì)", [
            "‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏´‡∏°‡∏∏‡∏ô (‡πÇ‡∏•‡∏Å‡∏´‡∏°‡∏∏‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏∏‡∏ô) 2.1",
            "‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏•‡∏≠‡∏¢ ‡πÇ‡∏Ñ‡∏•‡∏á‡πÄ‡∏Ñ‡∏•‡∏á ‡πÇ‡∏¢‡∏Å‡πÑ‡∏õ‡∏°‡∏≤ 2.1",
            "‡πÄ‡∏î‡∏¥‡∏ô‡πÇ‡∏ã‡πÄ‡∏ã ‡πÄ‡∏™‡∏µ‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏á‡∏ï‡∏±‡∏ß 2.3",
            "‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏∑‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏° 2.4",
            "‡πÅ‡∏Ñ‡πà‡∏°‡∏∂‡∏ô‡πÄ‡∏â‡∏¢‡πÜ 2.5",
            "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"
        ], key="dizzy_types")
        if "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" in dizzy_types:
            dizzy_other = st.text_input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô‡πÜ", key="dizzy_other")
            
        st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 4: ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô & ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤</span>",
    unsafe_allow_html=True
)

    with tab4:
        st.header("4. ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤")
        # ---------- Instruction Card : Tab 4 ----------
        st.markdown("""
        <style>
        .guide-card{
        background:rgba(255,255,255,0.25);
        border-radius:18px;
        box-shadow:0 8px 32px rgba(31,38,135,.15);
        backdrop-filter:blur(12px);
        -webkit-backdrop-filter:blur(12px);
        border:1px solid rgba(255,255,255,0.18);
        padding:2.5rem;
        margin-bottom:32px;
        color:#0f172a;
        font-size:1.4rem !important;
        line-height:1.9rem;
        }
        .guide-card h1{
        font-size:2.8rem !important;
        margin-bottom:1.2rem;
        font-weight:800;
        color:#0f172a;
        }
        .guide-card ul{padding-left:2rem;margin:0;}
        .guide-card li{margin:10px 0;font-size:1.4rem;}
        .guide-card li::marker{color:#38bdf8;font-size:1.6rem;}
        </style>

        <div class="guide-card">
        <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô & ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (Tab 4)</h1>
        <ul>
            <li>‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞ <strong>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà</strong><br>
                ‚ñ∏ ‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô <em>‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á / ‡∏ß‡∏±‡∏ô / ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå / ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</em> ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤<br>
                ‚ñ∏ ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à ‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (‡πÉ‡∏™‡πà 0 ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ)<br>
                ‚ñ∏‡πÄ‡∏•‡∏∑‡∏≠‡∏Å <strong>‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</strong><br>
                ‚ñ∏ <em>‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏±‡∏ô‡πÉ‡∏î</em> (‡πÄ‡∏â‡∏µ‡∏¢‡∏ö‡∏û‡∏•‡∏±‡∏ô)<br>
                ‚ñ∏ <em>‡∏Ñ‡πà‡∏≠‡∏¢ ‡πÜ ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô</em> (‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≠‡∏¢‡πÑ‡∏õ)<br>
                ‚ñ∏‡∏£‡∏∞‡∏ö‡∏∏ <strong>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á</strong><br>
                ‚ñ∏ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ / ‡∏ô‡∏≤‡∏ó‡∏µ / ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á / ‡∏ß‡∏±‡∏ô / ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤)<br>
                ‚ñ∏ ‡∏´‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äú___ ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‚Äù ‡∏´‡∏£‡∏∑‡∏≠ ‚Äú___ ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‚Äù ‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á<br>
                ‚ñ∏‡πÄ‡∏•‡∏∑‡∏≠‡∏Å <strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</strong><br>
                ‚ñ∏ ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‚Üí ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏ß‡∏±‡∏ô<br>
                ‚ñ∏ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1-3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå, 4-6 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå, ‡∏ô‡∏≤‡∏ô ‡πÜ ‡∏ó‡∏µ<br>
                ‚ñ∏<em>‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:</em> ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤-‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÅ‡∏¢‡∏Å‡πÇ‡∏£‡∏Ñ‡πÄ‡∏â‡∏µ‡∏¢‡∏ö‡∏û‡∏•‡∏±‡∏ô (‡πÄ‡∏ä‡πà‡∏ô Stroke) ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏ä‡∏ô‡∏¥‡∏î‡∏≠‡∏∑‡πà‡∏ô üí°<br>
        </ul>
        </div>
        """, unsafe_allow_html=True)

        st.subheader("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà?")
        col1, col2 = st.columns(2)
        with col1:
            hours_ago = st.number_input("___ ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Å‡πà‡∏≠‡∏ô 3.1", min_value=0, key="3_1_hours")
            days_ago = st.number_input("___ ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô 3.2", min_value=0, key="3_2_days")
        with col2:
            weeks_ago = st.number_input("___ ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏Å‡πà‡∏≠‡∏ô 3.3", min_value=0, key="3_3_weeks")
            months_ago = st.number_input("___ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô 3.4", min_value=0, key="3_4_months")

        st.subheader("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡πÉ‡∏î?")
        onset_type = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å", [
            "‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏±‡∏ô‡πÉ‡∏î 3.5", 
            "‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏ô‡πâ‡∏≠‡∏¢ ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ 3.6"
        ], key="onset_type")

        # st.subheader("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏¥‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?")
        # duration_type = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤", [
        #     "___ ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 180 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ) 3.7",
        #     "___ ‡∏ô‡∏≤‡∏ó‡∏µ (5 ‚Äì 30) 3.8",
        #     "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 30 ‡∏ô‡∏≤‡∏ó‡∏µ 3.9",
        #     "___ ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á 3.9",
        #     "___ ‡∏ß‡∏±‡∏ô 3.10",
        #     "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 2 ‡∏ß‡∏±‡∏ô ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏ß‡∏á‡∏´‡∏≤‡∏¢ 3.11"
        # ], key="duration_type")
        
        st.subheader("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏¥‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?")

        # 1) ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏ô‡∏¥‡∏î‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
        duration_kind = st.radio(
            "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤",
            (
                "‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (‚â§ 180)",        # 3.7
                "‡∏ô‡∏≤‡∏ó‡∏µ (5 ‚Äì 30)",        # 3.8
                "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 30 ‡∏ô‡∏≤‡∏ó‡∏µ",      # 3.9
                "‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á",              # 3.9 (‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö >30 ‡∏ô‡∏≤‡∏ó‡∏µ)
                "‡∏ß‡∏±‡∏ô",                   # 3.10
                "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 2 ‡∏ß‡∏±‡∏ô / ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤"  # 3.11
            ),
            key="duration_kind"
        )

        # 2) ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á number_input
        duration_value = None
        if duration_kind.startswith("‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ"):
            duration_value = st.number_input(
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", min_value=1, max_value=180, step=1, key="duration_sec"
            )
            duration_code = "3.7"

        elif duration_kind.startswith("‡∏ô‡∏≤‡∏ó‡∏µ"):
            duration_value = st.number_input(
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ‚Äò‡∏ô‡∏≤‡∏ó‡∏µ‚Äô (5‚Äì30)", min_value=5, max_value=30, step=1, key="duration_min"
            )
            duration_code = "3.8"

        elif duration_kind.startswith("‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"):
            duration_value = st.number_input(
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á (‚â• 1)", min_value=1, max_value=24, step=1, key="duration_hr"
            )
            duration_code = "3.9"

        elif duration_kind.startswith("‡∏ß‡∏±‡∏ô"):
            duration_value = st.number_input(
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô (1‚Äì2)", min_value=1, max_value=2, step=1, key="duration_day"
            )
            duration_code = "3.10"

        elif duration_kind.startswith("‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 30 ‡∏ô‡∏≤‡∏ó‡∏µ"):
            duration_code = "3.9"   # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç

        else:  # ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 2 ‡∏ß‡∏±‡∏ô / ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤
            duration_code = "3.11"  # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç

        # 3) ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ï‡πà‡∏≠)
        if duration_value is not None:
            st.info(f"‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: {duration_kind} ‚Äî {duration_value} ‡∏´‡∏ô‡πà‡∏ß‡∏¢  (‡∏£‡∏´‡∏±‡∏™ {duration_code})")
        else:
            st.info(f"‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: {duration_kind}  (‡∏£‡∏´‡∏±‡∏™ {duration_code})")

        # === ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á ===
        st.session_state["duration_code"] = duration_code
        st.session_state["duration_value"] = duration_value

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡∏≠‡∏ô‡∏ó‡πâ‡∏≤‡∏¢‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
        duration_type = f"{duration_kind} {duration_value if duration_value is not None else ''}".strip()


        st.subheader("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞")
        freq_choice = st.radio(
            "‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ö‡πà‡∏≠‡∏¢‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô?",
            (
                "‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô",               # daily
                "‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ 1-3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á",   # weekly (low)
                "‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ 4-6 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á",   # weekly (high)
                "‡∏ô‡∏≤‡∏ô‡πÜ ‡∏ó‡∏µ"               # seldom
            ),
            key="freq_choice"
        )

        # ‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        freq_value = None
        if freq_choice == "‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô":
            freq_value = st.number_input(
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô", min_value=1, max_value=30, step=1,
                key="freq_per_day"
            )
            dizzy_frequency_text = f"‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô {freq_value} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏ß‡∏±‡∏ô"

        elif freq_choice.startswith("‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ 1-3"):
            freq_value = st.number_input(
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå (1-3)", min_value=1, max_value=3, step=1,
                key="freq_week_1_3"
            )
            dizzy_frequency_text = f"‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ {freq_value} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á"

        elif freq_choice.startswith("‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ 4-6"):
            freq_value = st.number_input(
                "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå (4-6)", min_value=4, max_value=6, step=1,
                key="freq_week_4_6"
            )
            dizzy_frequency_text = f"‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡∏∞ {freq_value} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á"

        else:            # ‡∏ô‡∏≤‡∏ô‡πÜ ‡∏ó‡∏µ
            dizzy_frequency_text = "‡∏ô‡∏≤‡∏ô‡πÜ ‡∏ó‡∏µ"

        st.info(f"‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà: {dizzy_frequency_text}")

        # ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á report
        st.session_state["dizzy_frequency_text"] = dizzy_frequency_text
        st.session_state["dizzy_freq_value"] = freq_value
        
        
        
# --------------------------------------------------------------
#         dizzy_frequency = st.radio("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ö‡πà‡∏≠‡∏¢‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô?", [
#             "‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡∏ß‡∏±‡∏ô‡∏•‡∏∞ ___ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
#             "1-3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå",
#             "4-6 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå",
#             "‡∏ô‡∏≤‡∏ô‡πÜ ‡∏ó‡∏µ"
#         ], key="dizzy_frequency")
        
#         st.markdown(
#     "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 5 : ‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô</span>",
#     unsafe_allow_html=True
# )

        
    with tab5:
        st.header("5. ‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô")
        # ---------- Instruction Card : Tab 5 ----------
        st.markdown("""
        <style>
        .guide-card{
        background:rgba(255,255,255,0.25);
        border-radius:18px;
        box-shadow:0 8px 32px rgba(31,38,135,.15);
        backdrop-filter:blur(12px);
        -webkit-backdrop-filter:blur(12px);
        border:1px solid rgba(255,255,255,0.18);
        padding:2.5rem;
        margin-bottom:32px;
        color:#0f172a;
        font-size:1.4rem !important;
        line-height:1.9rem;
        }
        .guide-card h1{
        font-size:2.8rem !important;
        margin-bottom:1.2rem;
        font-weight:800;
        color:#0f172a;
        }
        .guide-card ul{padding-left:2rem;margin:0;}
        .guide-card li{margin:10px 0;font-size:1.4rem;}
        .guide-card li::marker{color:#38bdf8;font-size:1.6rem;}
        </style>

        <div class="guide-card">
        <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô (Tab 5)</h1>
        <ul>
            <li>‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å‡πÉ‡∏ô <strong>‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠</strong> ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</li>
            <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡πâ‡∏≠ ‡πÄ‡∏ä‡πà‡∏ô<br>
                ‚ñ∏ üõå ‡∏û‡∏•‡∏¥‡∏Å‡∏ï‡∏±‡∏ß‡∏ö‡∏ô‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‚ÄÉ‚ñ∏ ü™ú ‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏¢‡∏∑‡∏ô‡πÄ‡∏£‡πá‡∏ß‚ÄÉ‚ñ∏ üîä ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á‚ÄÉ‚ñ∏ üí° ‡πÅ‡∏™‡∏á‡∏ß‡∏π‡∏ö‡∏ß‡∏≤‡∏ö</li>
            <li>‡∏´‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äú‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á‚Äù ‡∏´‡∏£‡∏∑‡∏≠ ‚Äú‡∏™‡∏¥‡πà‡∏á‡πÄ‡∏£‡πâ‡∏≤‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‚Äù ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</li>
            <li>‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äú‡∏Ç‡∏ì‡∏∞‡∏ô‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏•‡∏¥‡∏Å‡∏ï‡∏∞‡πÅ‡∏Ñ‡∏á‡∏ï‡∏±‡∏ß‚Äù ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ñ‡∏≤‡∏° ‚Äú‡∏û‡∏•‡∏¥‡∏Å‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡πÉ‡∏î‚Äù (‡∏ã‡πâ‡∏≤‡∏¢/‡∏Ç‡∏ß‡∏≤)</li>
            <li>‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äú‡∏≠‡∏≤‡∏´‡∏≤‡∏£‚Äù ‡∏à‡∏∞‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á <em>‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏´‡∏≤‡∏£</em> ‡∏õ‡∏£‡∏≤‡∏Å‡∏è ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏á‡∏™‡∏±‡∏¢</li>
            <li>‡∏Å‡∏£‡∏ì‡∏µ ‚Äú‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‚Äù ‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡πä‡∏Å ‚Äú‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏≠‡∏á</li>
            <li>‡∏¢‡∏¥‡πà‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏¢‡∏¥‡πà‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏¢‡∏Å‡πÇ‡∏£‡∏Ñ‡∏ä‡∏ô‡∏¥‡∏î vestibular ‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)
        st.markdown("‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞? (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì)")

        trigger_1 = st.checkbox("‡∏ï‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏ô‡∏Ç‡∏ì‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ç‡∏¢‡∏±‡∏ö‡∏ï‡∏±‡∏ß ‡∏Å‡πá‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÄ‡∏•‡∏¢ 4.1", key="trigger_1")
        trigger_2 = st.checkbox("‡∏Ç‡∏ì‡∏∞‡∏ô‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏•‡∏¥‡∏Å‡∏ï‡∏∞‡πÅ‡∏Ñ‡∏á‡∏ï‡∏±‡∏ß 4.2", key="trigger_2")
        if trigger_2:
            side = st.radio("‡∏û‡∏•‡∏¥‡∏Å‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡πÉ‡∏î", ["‡∏ã‡πâ‡∏≤‡∏¢", "‡∏Ç‡∏ß‡∏≤"], key="turning_side")
        trigger_3 = st.checkbox("‡∏•‡πâ‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏á‡∏ô‡∏≠‡∏ô 4.2", key="trigger_3")
        trigger_4 = st.checkbox("‡∏Ç‡∏ì‡∏∞‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô (‡∏ô‡∏±‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏∑‡∏ô) 4.3", key="trigger_4")
        trigger_5 = st.checkbox("‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏±‡∏ö‡∏®‡∏µ‡∏£‡∏©‡∏∞ 4.4", key="trigger_5")
        trigger_6 = st.checkbox("‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏≠‡∏á ‡πÑ‡∏°‡πà‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á 4.5", key="trigger_6")
        trigger_7 = st.checkbox("‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á 4.6", key="trigger_7")
        trigger_8 = st.checkbox("‡∏™‡∏¥‡πà‡∏á‡πÄ‡∏£‡πâ‡∏≤‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏ï‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠, ‡πÅ‡∏™‡∏á‡∏™‡∏µ) 4.7", key="trigger_8")
        trigger_9 = st.checkbox("‡∏≠‡∏≤‡∏´‡∏≤‡∏£ 4.8", key="trigger_9")
        if trigger_9:
            food_trigger = st.text_input("‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏´‡∏≤‡∏£", key="food_trigger9")
        trigger_10 = st.checkbox("‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏•‡πâ‡∏≤ 4.9", key="trigger_10")
        trigger_11 = st.checkbox("‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÉ‡∏ô‡∏´‡∏π ‡πÄ‡∏ä‡πà‡∏ô ‡∏î‡∏≥‡∏ô‡πâ‡∏≥‡∏•‡∏∂‡∏Å ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏π‡∏á ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≥ 4.10", key="trigger_11")
        trigger_12 = st.checkbox("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô", key="trigger_12")
        
        st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 6 : ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°</span>",
    unsafe_allow_html=True
)


    with tab6:
        st.header("6. ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°")
        st.markdown("""
        <style>
        .guide-card{
        background:rgba(255,255,255,0.25);
        border-radius:18px;
        box-shadow:0 8px 32px rgba(31,38,135,.15);
        backdrop-filter:blur(12px);
        -webkit-backdrop-filter:blur(12px);
        border:1px solid rgba(255,255,255,0.18);
        padding:2.5rem;
        margin-bottom:32px;
        color:#0f172a;
        font-size:1.4rem !important;
        line-height:1.9rem;
        }
        .guide-card h1{
        font-size:2.8rem !important;
        margin-bottom:1.2rem;
        font-weight:800;
        color:#0f172a;
        }
        .guide-card ul{padding-left:2rem;margin:0;}
        .guide-card li{margin:10px 0;font-size:1.4rem;}
        .guide-card li::marker{color:#38bdf8;font-size:1.6rem;}
        </style>

        <div class="guide-card">
        <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏° (Tab 6)</h1>
        <ul>
            <li>‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å‡πÉ‡∏ô <strong>‡∏ó‡∏∏‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</strong> ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞ ‡πÄ‡∏ä‡πà‡∏ô<br>
                ‚ñ∏ ü§¢ <em>‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ / ‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô</em>‚ÄÉ‚ñ∏ üëÇ <em>‡∏´‡∏π‡∏≠‡∏∑‡πâ‡∏≠ / ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏•‡∏î‡∏•‡∏á</em><br>
                ‚ñ∏ ü§ï <em>‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß / ‡πÑ‡∏°‡πÄ‡∏Å‡∏£‡∏ô</em>‚ÄÉ‚ñ∏ ü§í <em>‡∏°‡∏µ‡πÑ‡∏Ç‡πâ</em>‚ÄÉ‚ñ∏ ü¶µ <em>‡πÅ‡∏Ç‡∏ô‡∏Ç‡∏≤‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á / ‡∏ä‡∏≤</em></li>
                ‚ñ∏‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏Ç 5.10 (‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏û‡∏£‡πà‡∏≤ ‡∏û‡∏π‡∏î‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î ‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏ã) ‡πÄ‡∏õ‡πá‡∏ô <strong>‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢</strong><br>
                ‚ñ∏ ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ç‡πâ‡∏≠ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°<br>
                ‚ñ∏‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡πâ‡∏≠ ‚Äî ‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏£‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô<br>
                ‚ñ∏‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô ‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡πä‡∏Å ‚Äú<em>‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏´‡∏π</em>‚Äù ‡∏´‡∏£‡∏∑‡∏≠ ‚Äú<em>‡πÑ‡∏°‡πà‡∏°‡∏µ</em>‚Äù ‡∏ï‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á<br>
                ‚ñ∏‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äú‡∏≠‡∏∑‡πà‡∏ô‡πÜ‚Äù ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°<br>
        </ul>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏£‡πà‡∏ß‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì)")

        symptom_1 = st.checkbox("‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô", key="symptom_1")
        symptom_2 = st.checkbox("‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏´‡∏π 5.1", key="symptom_2")
        symptom_3 = st.checkbox("‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏•‡∏î‡∏•‡∏á ‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô 5.2", key="symptom_3")
        symptom_4 = st.checkbox("‡∏´‡∏π‡∏≠‡∏∑‡πâ‡∏≠ ‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏´‡∏π 5.3", key="symptom_4")
        symptom_5 = st.checkbox("‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÅ‡∏ô‡πà‡∏ô‡πÉ‡∏ô‡∏´‡∏π 5.4", key="symptom_5")
        symptom_6 = st.checkbox("‡∏°‡∏µ‡πÑ‡∏Ç‡πâ 5.5", key="symptom_6")
        symptom_7 = st.checkbox("‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡πÑ‡∏´‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏π 5.6", key="symptom_7")
        symptom_8 = st.checkbox("‡∏õ‡∏ß‡∏î‡∏Ñ‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡πà‡∏≤‡πÑ‡∏´‡∏•‡πà 5.7", key="symptom_8")
        symptom_9 = st.checkbox("‡∏õ‡∏ß‡∏î‡∏®‡∏µ‡∏£‡∏©‡∏∞ 5.8", key="symptom_9")
        symptom_10 = st.checkbox("‡∏õ‡∏ß‡∏î‡πÑ‡∏°‡πÄ‡∏Å‡∏£‡∏ô 5.9", key="symptom_10")
        symptom_11 = st.checkbox("‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏û‡∏£‡πà‡∏≤‡∏°‡∏±‡∏ß 5.10", key="symptom_11")
        symptom_12 = st.checkbox("‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏ã‡πâ‡∏≠‡∏ô 5.10", key="symptom_12")
        symptom_13 = st.checkbox("‡∏û‡∏π‡∏î‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î ‡∏û‡∏π‡∏î‡∏ï‡∏¥‡∏î‡∏Ç‡∏±‡∏î 5.10", key="symptom_13")
        symptom_14 = st.checkbox("‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏´‡∏ö 5.10", key="symptom_14")
        symptom_15 = st.checkbox("‡∏Å‡∏•‡∏∑‡∏ô‡∏•‡∏≥‡∏ö‡∏≤‡∏Å 5.10", key="symptom_15")
        symptom_16 = st.checkbox("‡∏ä‡∏≤‡πÅ‡∏Ç‡∏ô‡∏Ç‡∏≤ 5.10", key="symptom_16")
        symptom_17 = st.checkbox("‡πÅ‡∏Ç‡∏ô‡∏Ç‡∏≤‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á 5.10", key="symptom_17")
        symptom_18 = st.checkbox("‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏ã ‡∏ó‡∏£‡∏á‡∏ï‡∏±‡∏ß‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ 5.17", key="symptom_18")
        symptom_19 = st.checkbox("‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ï‡∏±‡∏ß 5.18", key="symptom_19")
        symptom_20 = st.checkbox("‡∏ä‡∏±‡∏Å‡πÄ‡∏Å‡∏£‡πá‡∏á 5.19", key="symptom_20")
        symptom_21 = st.checkbox("‡πÉ‡∏à‡∏™‡∏±‡πà‡∏ô ‡πÉ‡∏à‡∏´‡∏ß‡∏¥‡∏ß 5.20", key="symptom_21")
        symptom_22 = st.checkbox("‡πÄ‡∏à‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å 5.20", key="symptom_22")
        symptom_23 = st.checkbox("‡∏ä‡∏≤‡∏õ‡∏•‡∏≤‡∏¢‡∏°‡∏∑‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏•‡∏≤‡∏¢‡πÄ‡∏ó‡πâ‡∏≤ 5.21", key="symptom_23")
        symptom_24 = st.checkbox("‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏≤", key="symptom_24")
        
        st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 7 : ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢</span>",
    unsafe_allow_html=True
)

    with tab7:
        st.header("7. ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢")
        # ---------- Instruction Card : Tab 7 ----------
        st.markdown("""
        <style>
        .guide-card{
        background:rgba(255,255,255,0.25);
        border-radius:18px;
        box-shadow:0 8px 32px rgba(31,38,135,.15);
        backdrop-filter:blur(12px);
        -webkit-backdrop-filter:blur(12px);
        border:1px solid rgba(255,255,255,0.18);
        padding:2.5rem;
        margin-bottom:32px;
        color:#0f172a;
        font-size:1.4rem !important;
        line-height:1.9rem;
        }
        .guide-card h1{
        font-size:2.8rem !important;
        margin-bottom:1.2rem;
        font-weight:800;
        color:#0f172a;
        }
        .guide-card ul{padding-left:2rem;margin:0;}
        .guide-card li{margin:10px 0;font-size:1.4rem;}
        .guide-card li::marker{color:#38bdf8;font-size:1.6rem;}
        </style>

        <div class="guide-card">
        <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢ (Tab 7)</h1>
        <ul>
            <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î <strong>‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 1‚Äì3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</strong> ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞ ‡πÄ‡∏ä‡πà‡∏ô</li>
            <ul>
            <li>ü¶ª <strong>‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏´‡∏π</strong> ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏à‡∏≤‡∏Å‡∏´‡∏π (6.1)</li>
            <li>üß† <strong>‡∏Å‡∏≤‡∏£‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏®‡∏µ‡∏£‡∏©‡∏∞</strong> / ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå ‡∏•‡πâ‡∏° ‡∏Å‡∏£‡∏∞‡πÅ‡∏ó‡∏Å (6.2)</li>
            <li>ü§í <strong>‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î</strong> ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö (6.3)</li>
            <li>üíß <strong>‡∏ó‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢ ‡πÄ‡∏™‡∏µ‡∏¢‡∏ô‡πâ‡∏≥ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á</strong> (6.4)</li>
            <li>üíä <strong>‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏ä‡∏ô‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà</strong> (‡πÄ‡∏ä‡πà‡∏ô ‡∏¢‡∏≤‡∏õ‡∏è‡∏¥‡∏ä‡∏µ‡∏ß‡∏ô‡∏∞ ‡∏¢‡∏≤‡∏Å‡∏±‡∏ô‡∏ä‡∏±‡∏Å ‡∏Ø‡∏•‡∏Ø) (6.5)<br>
                ‚ñ∏ ‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à ‚Äú‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏´‡∏π‚Äù</li>
            </ul>

            
        </ul>
        </div>
        """, unsafe_allow_html=True)
        illness_1 = st.checkbox("‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏´‡∏π‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ 6.1", key="illness_1")
        illness_2 = st.checkbox("‡∏Å‡∏≤‡∏£‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏®‡∏µ‡∏£‡∏©‡∏∞ 6.2", key="illness_2")
        illness_3 = st.checkbox("‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏Ç‡πâ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ 6.3", key="illness_3")
        illness_4 = st.checkbox("‡∏ó‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢ ‡πÄ‡∏™‡∏µ‡∏¢‡∏ô‡πâ‡∏≥ ‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠‡∏°‡∏≤‡∏Å ‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡∏Å ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ 6.4", key="illness_4")
        illness_5 = st.checkbox("‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏ä‡∏ô‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ 6.5", key="illness_5")
        if illness_5:
            new_drug = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤", key="new_drug")
            
        st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 8 : ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡πà‡∏•‡∏á</span>",
    unsafe_allow_html=True
)

    with tab8:
        st.header("8. ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏¢‡πà‡∏•‡∏á")
        st.markdown("""
        <style>
        .guide-card{
        background:rgba(255,255,255,0.25);
        border-radius:18px;
        box-shadow:0 8px 32px rgba(31,38,135,.15);
        backdrop-filter:blur(12px);
        -webkit-backdrop-filter:blur(12px);
        border:1px solid rgba(255,255,255,0.18);
        padding:2.5rem;
        margin-bottom:32px;
        color:#0f172a;
        font-size:1.4rem !important;
        line-height:1.9rem;
        }
        .guide-card h1{font-size:2.8rem !important;margin-bottom:1.2rem;font-weight:800;}
        .guide-card ul{padding-left:2rem;margin:0;}
        .guide-card li{margin:10px 0;font-size:1.4rem;}
        .guide-card li::marker{color:#38bdf8;font-size:1.6rem;}
        </style>

        <div class="guide-card">
        <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡πà‡∏•‡∏á (Tab 8)</h1>

        <ul>
            <li>
            ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å <strong>‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå</strong> ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÅ‡∏¢‡πà‡∏•‡∏á
            <ul>
                <li>‚ÜïÔ∏è ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏≤‡∏Å‡∏ô‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏±‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏∑‡∏ô‡πÄ‡∏£‡πá‡∏ß</li>
                <li>üßç ‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏∑‡∏ô‡πÄ‡∏â‡∏¢ ‡πÜ ‡∏ô‡∏≤‡∏ô ‡πÜ</li>
                <li>üì± ‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏à‡πâ‡∏≠‡∏á‡∏ô‡∏≤‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏î‡∏π‡∏à‡∏≠‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå</li>
                <li>üîä ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ô‡∏û‡∏•‡∏∏‡∏Å‡∏û‡∏•‡πà‡∏≤‡∏ô</li>
                <li>üîÑ ‡∏´‡∏±‡∏ô‡∏´‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÄ‡∏£‡πá‡∏ß ‡πÜ</li>
            </ul>
            </li>

        </ul>
        </div>
        """, unsafe_allow_html=True)
        
        worsen_1 = st.checkbox("‡∏•‡πâ‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏á‡∏ô‡∏≠‡∏ô 7.1", key="worsen_1")
        worsen_2 = st.checkbox("‡∏û‡∏•‡∏¥‡∏Å‡∏ï‡∏±‡∏ß‡∏ö‡∏ô‡πÄ‡∏ï‡∏µ‡∏¢‡∏á 7.2", key="worsen_2")
        worsen_3 = st.checkbox("‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ 7.3", key="worsen_3")
        worsen_4 = st.checkbox("‡πÄ‡∏á‡∏¢‡∏´‡∏ô‡πâ‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡πâ‡∏°‡∏´‡∏ô‡πâ‡∏≤ 7.4", key="worsen_4")
        worsen_5 = st.checkbox("‡∏´‡∏±‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÑ‡∏õ‡∏°‡∏≤‡∏ã‡πâ‡∏≤‡∏¢‡∏Ç‡∏ß‡∏≤ 7.5", key="worsen_5")
        worsen_6 = st.checkbox("‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î ‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏•‡πâ‡∏≤ ‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ 7.6", key="worsen_6")
        
        st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡πà‡∏•‡∏á‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 9 : ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</span>",
    unsafe_allow_html=True
)

    with tab9:
        st.header("9. ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô")
        # ---------- Instruction Card : Tab 9 ----------
        st.markdown("""
        <style>
        .guide-card{
        background:rgba(255,255,255,0.25);
        border-radius:18px;
        box-shadow:0 8px 32px rgba(31,38,135,.15);
        backdrop-filter:blur(12px);
        -webkit-backdrop-filter:blur(12px);
        border:1px solid rgba(255,255,255,0.18);
        padding:2.5rem;
        margin-bottom:32px;
        color:#0f172a;
        font-size:1.4rem !important;
        line-height:1.9rem;
        }
        .guide-card h1{
        font-size:2.8rem !important;
        margin-bottom:1.2rem;
        font-weight:800;
        color:#0f172a;
        }
        .guide-card ul{padding-left:2rem;margin:0;}
        .guide-card li{margin:10px 0;font-size:1.4rem;}
        .guide-card li::marker{color:#38bdf8;font-size:1.6rem;}
        </style>

        <div class="guide-card">
        <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô (Tab 9)</h1>
        <ul>
            <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å <strong>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞</strong> ‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</li>
            <li>‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1 ‡∏à‡∏≤‡∏Å 4 ‡∏£‡∏∞‡∏î‡∏±‡∏ö:</li>
            <ul>
            <li>üü¢ <strong>‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö</strong> ‚Äì ‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥</li>
            <li>üü° <strong>‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ö‡πâ‡∏≤‡∏á</strong> ‚Äì ‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß</li>
            <li>üü† <strong>‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏°‡∏≤‡∏Å</strong> ‚Äì ‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å/‡∏•‡∏≤‡∏á‡∏≤‡∏ô‡∏ö‡πà‡∏≠‡∏¢</li>
            <li>üî¥ <strong>‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ï‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏°‡∏≤‡∏Å</strong> ‚Äì ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥</li>
            </ul>
            <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô <strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå</strong> ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô</li>
            <li>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)
        
        impact_level = st.radio("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô?", [
            "‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö 8.1",
            "‡∏°‡∏µ‡∏ú‡∏•‡∏ö‡πâ‡∏≤‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ 8.2",
            "‡∏°‡∏µ‡∏ú‡∏•‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á (‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏á‡∏≤‡∏ô/‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô) 8.3",
            "‡∏°‡∏µ‡∏ú‡∏•‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á (‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô) 8.4"
        ], key="life_impact")
        
        st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 10 : ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô</span>",
    unsafe_allow_html=True
)
        
    # === ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Tab 1-8 ===
    selected_codes = set()   
    # === ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏° selected_codes ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Tab 2-8 ===
if 'dizzy_types' in locals():
    if "‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏´‡∏°‡∏∏‡∏ô (‡πÇ‡∏•‡∏Å‡∏´‡∏°‡∏∏‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏∏‡∏ô) 2.1" in dizzy_types:
        selected_codes.add("2.1")
    if "‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏•‡∏≠‡∏¢ ‡πÇ‡∏Ñ‡∏•‡∏á‡πÄ‡∏Ñ‡∏•‡∏á ‡πÇ‡∏¢‡∏Å‡πÑ‡∏õ‡∏°‡∏≤ 2.1" in dizzy_types:
        selected_codes.add("2.1")
    if "‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏∑‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏° 2.4" in dizzy_types:
        selected_codes.add("2.4")
    if "‡πÅ‡∏Ñ‡πà‡∏°‡∏∂‡∏ô‡πÄ‡∏â‡∏¢‡πÜ 2.5" in dizzy_types:
        selected_codes.add("2.5")

if 'onset_type' in locals():
    if onset_type == "‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏±‡∏ô‡πÉ‡∏î 3.5":
        selected_codes.add("3.5")
    elif onset_type == "‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏ô‡πâ‡∏≠‡∏¢ ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ 3.6":
        selected_codes.add("3.6")

if 'duration_type' in locals():
    for code in ["3.7", "3.8", "3.9", "3.10", "3.11", "3.4"]:
        if code in duration_type:
            selected_codes.add(code)

for i in range(1, 13):
    if f"trigger_{i}" in locals() and eval(f"trigger_{i}"):
        selected_codes.add(f"4.{i}")

symptom_map = {
    2: "5.1", 3: "5.2", 4: "5.3", 5: "5.4", 6: "5.5", 7: "5.6", 8: "5.7", 9: "5.8",
    10: "5.9", 11: "5.10", 12: "5.10", 13: "5.10", 14: "5.10", 15: "5.10",
    16: "5.10", 17: "5.10", 18: "5.17", 19: "5.18", 20: "5.19", 21: "5.20",
    22: "5.20", 23: "5.21"
}
for i, code in symptom_map.items():
    if f"symptom_{i}" in locals() and eval(f"symptom_{i}"):
        selected_codes.add(code)

for i in range(1, 6):
    if f"illness_{i}" in locals() and eval(f"illness_{i}"):
        selected_codes.add(f"6.{i}")

for i in range(1, 7):
    if f"worsen_{i}" in locals() and eval(f"worsen_{i}"):
        selected_codes.add(f"7.{i}")

# === TAB 10: ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏• ====
with tab10:
    st.header("10. ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô")
    st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 11 : Eye Tracking</span>",
    unsafe_allow_html=True
)
    
    # ---------- Instruction Card : Tab 10 ----------
    st.markdown("""
    <style>
    .guide-card{
    background:rgba(255,255,255,0.25);
    border-radius:18px;
    box-shadow:0 8px 32px rgba(31,38,135,.15);
    backdrop-filter:blur(12px);
    -webkit-backdrop-filter:blur(12px);
    border:1px solid rgba(255,255,255,0.18);
    padding:2.5rem;margin-bottom:32px;
    color:#0f172a;font-size:1.4rem !important;line-height:1.9rem;
    }
    .guide-card h1{font-size:2.8rem !important;margin-bottom:1.2rem;font-weight:800;}
    .guide-card ul{padding-left:2rem;margin:0;}
    .guide-card li{margin:10px 0;font-size:1.4rem;}
    .guide-card li::marker{color:#38bdf8;font-size:1.6rem;}
    </style>

    <div class="guide-card">
    <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô (Tab 10)</h1>
    <ul>
        <li>‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì <strong>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á</strong> ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡∏Å‡∏ß‡πà‡∏≤ 20 ‡∏Å‡∏•‡∏∏‡πà‡∏°</li>
        <li>‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏á ‚ûú ‡∏ï‡πà‡∏≥ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå</li>
        <li>‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á <strong>‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ + ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</strong> (‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢)</li>
        <li>‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° <em>‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î CSV</em> ‡∏´‡∏£‡∏∑‡∏≠ <em>‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF</em> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏û‡∏ó‡∏¢‡πå</li>
        <li>üîç ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á (‡πÄ‡∏ä‡πà‡∏ô 5.10 ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠) ‡∏Ñ‡∏ß‡∏£‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)

    # ---------- Mapping : ‡∏£‡∏´‡∏±‡∏™ ‚Üí ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ ----------
    code_desc = {
        "2.1":"‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏´‡∏°‡∏∏‡∏ô / ‡πÇ‡∏Ñ‡∏•‡∏á‡πÄ‡∏Ñ‡∏•‡∏á", "2.4":"‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏∑‡∏î", "2.5":"‡∏°‡∏∂‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞",
        "3.4":"‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "3.5":"‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ", "3.6":"‡∏Ñ‡πà‡∏≠‡∏¢ ‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô",
        "3.7":"‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", "3.8":"‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ô‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏≤‡∏ó‡∏µ", "3.9":"‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ > 30 ‡∏ô‡∏≤‡∏ó‡∏µ",
        "3.10":"‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ô‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô", "3.11":"‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ô‡∏≤‡∏ô > 2 ‡∏ß‡∏±‡∏ô / ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á",
        "4.1":"‡∏ï‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ç‡∏¢‡∏±‡∏ö", "4.2":"‡∏û‡∏•‡∏¥‡∏Å‡∏ï‡∏∞‡πÅ‡∏Ñ‡∏á", "4.3":"‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏¢‡∏∑‡∏ô/‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß",
        "4.4":"‡∏Ç‡∏¢‡∏±‡∏ö‡∏®‡∏µ‡∏£‡∏©‡∏∞", "4.5":"‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏≠‡∏á", "4.6":"‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á",
        "4.7":"‡∏™‡∏¥‡πà‡∏á‡πÄ‡∏£‡πâ‡∏≤‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏ï‡∏≤", "4.8":"‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "4.9":"‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î", "4.10":"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏®",
        "5.1":"‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ/‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô", "5.2":"‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏•‡∏î‡∏•‡∏á", "5.3":"‡∏´‡∏π‡∏≠‡∏∑‡πâ‡∏≠", "5.4":"‡πÅ‡∏ô‡πà‡∏ô‡∏´‡∏π",
        "5.5":"‡∏°‡∏µ‡πÑ‡∏Ç‡πâ", "5.6":"‡∏ô‡πâ‡∏≥‡πÑ‡∏´‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏π", "5.7":"‡∏õ‡∏ß‡∏î‡∏Ñ‡∏≠/‡∏ö‡πà‡∏≤", "5.8":"‡∏õ‡∏ß‡∏î‡∏®‡∏µ‡∏£‡∏©‡∏∞",
        "5.9":"‡πÑ‡∏°‡πÄ‡∏Å‡∏£‡∏ô", "5.10":"‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó", "5.17":"‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏ã", "5.18":"‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ï‡∏±‡∏ß",
        "5.19":"‡∏ä‡∏±‡∏Å‡πÄ‡∏Å‡∏£‡πá‡∏á", "5.20":"‡πÉ‡∏à‡∏™‡∏±‡πà‡∏ô/‡πÄ‡∏à‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å", "5.21":"‡∏ä‡∏≤‡∏õ‡∏•‡∏≤‡∏¢‡∏°‡∏∑‡∏≠/‡πÄ‡∏ó‡πâ‡∏≤",
        "6.1":"‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏´‡∏π", "6.2":"‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡∏®‡∏µ‡∏£‡∏©‡∏∞", "6.3":"‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î/‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÑ‡∏ß‡∏£‡∏±‡∏™",
        "6.4":"‡∏ó‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢/‡∏Ç‡∏≤‡∏î‡∏ô‡πâ‡∏≥", "6.5":"‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏ä‡∏ô‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà",
        "7.1":"‡∏•‡πâ‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏á‡∏ô‡∏≠‡∏ô", "7.2":"‡∏û‡∏•‡∏¥‡∏Å‡∏ï‡∏±‡∏ß‡∏ö‡∏ô‡πÄ‡∏ï‡∏µ‡∏¢‡∏á", "7.3":"‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡πá‡∏ß",
        "7.4":"‡πÄ‡∏á‡∏¢‡∏´‡∏ô‡πâ‡∏≤/‡∏Å‡πâ‡∏°‡∏´‡∏ô‡πâ‡∏≤", "7.5":"‡∏´‡∏±‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏ã‡πâ‡∏≤‡∏¢‡∏Ç‡∏ß‡∏≤", "7.6":"‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î/‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡∏ô‡πâ‡∏≠‡∏¢"
    }

    

    st.markdown("<h2 style='color:red;'>üö® Critical Alert: ‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏î‡πà‡∏ß‡∏ô</h2>", unsafe_allow_html=True)

    disease_mapping = {
        "BPPV": {"2.1", "3.5", "3.7", "4.2", "5.1", "6.2", "7.1", "7.2"},
        "Meniere‚Äôs disease": {"2.1", "3.5", "3.9", "4.5", "5.2", "5.3", "5.4"},
        "Labyrinthitis": {"2.1", "3.5", "3.10", "4.5", "5.2", "5.3", "5.5", "5.6", "6.1", "6.3"},
        "Perilymph fistular": {"2.1", "3.5", "3.11", "4.5", "4.10", "5.2", "5.3", "6.2"},
        "Vestibular neuritis": {"2.1", "3.5", "3.10", "4.5", "5.1", "6.3"},
        "Vestibulopathy": {"2.1", "3.5", "3.11", "4.5", "5.1"},
        "Acoustic neuroma": {"2.1", "3.6", "3.11", "4.5", "5.1", "5.10", "5.17"},
        "Ototoxic drug expose": {"2.1", "3.5", "3.11", "4.5", "5.2", "5.3", "6.5"},
        "TIA": {"3.5", "3.8", "5.1", "5.8", "5.10", "5.17", "5.18"},
        "VBI": {"2.1", "3.5", "3.7", "4.4", "5.1", "5.8", "5.10", "5.17", "5.18"},
        "PICA syndrome": {"3.5", "3.11", "5.2", "5.8", "5.10", "5.17"},
        "Cerebellar infarction": {"3.5", "3.11", "4.1", "5.8", "5.10", "5.17"},
        "Multiple sclerosis": {"3.4", "3.6", "3.11", "5.8", "5.10"},
        "Cerebellar abscess": {"3.11", "5.5", "5.8", "5.10", "5.17"},
        "Trauma": {"3.11", "5.10", "5.17", "6.2"},
        "Migrainous vertigo": {"3.9", "4.6", "4.7", "4.8", "5.1", "5.8", "5.9"},
        "Toxic drugs": {"3.5", "3.10", "4.5", "5.2", "5.3"},
        "Tumor (CPA/posterior fossa)": {"3.6", "3.11", "4.5", "5.1", "5.10", "5.17"},
        "Cardiac": {"2.4", "5.20"},
        "Cervicogenic": {"5.7", "7.4", "7.5"},
        "Orthostatic hypotension": {"4.3", "6.4", "7.3"},
        "Anemia": {"2.4", "2.5"},
        "Peripheral neuropathy": {"5.21"},
        "Phobic dizziness": {"2.5", "4.9", "7.6"}
    }

    possible_diseases = []
    for disease, codes in disease_mapping.items():
        match_score = len(codes.intersection(selected_codes)) / len(codes)
        if match_score >= 0.4:
            possible_diseases.append((disease, f"{match_score*100:.0f}%"))

    if possible_diseases:
        st.subheader("‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á")
        for disease, score in sorted(possible_diseases, key=lambda x: -float(x[1][:-1])):
            st.markdown(f"- {disease} ({score} ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏£)")
    else:
        st.warning("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ")
        
    # ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡πÉ‡∏´‡∏°‡πà (‡πÇ‡∏£‡∏Ñ + ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡∏´‡∏±‡∏™) ----------
    def codes_to_text(codes:set[str]):
        return ", ".join(code_desc.get(c, c) for c in sorted(codes))

    df_final = pd.DataFrame([
        {"‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ": disease,
        "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á": codes_to_text(codes)}
        for disease, codes in disease_mapping.items()
    ])

    st.subheader("‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á")
    st.dataframe(df_final, use_container_width=True)

    st.markdown("---")
    st.subheader("‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (‡∏à‡∏≤‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£)")
    df_final = pd.DataFrame([
        {"‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ": disease, "‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á": ", ".join(sorted(codes))}
        for disease, codes in disease_mapping.items()
    ])
    st.dataframe(df_final)
    
        # ‡πÄ‡∏Å‡πá‡∏ö‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Ñ‡πâ‡∏≤ (‡∏ä‡∏∑‡πà‡∏≠) ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≤‡∏Å‡∏≤‡∏£
    matched_disease_names = [d[0] for d in possible_diseases]
    matched_disease_scores = [d[1] for d in possible_diseases]

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
    user_data = {
        # --- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ---
        "‡πÄ‡∏û‡∏®": gender,
        "‡∏≠‡∏≤‡∏¢‡∏∏": age,
        "‡∏≠‡∏≤‡∏ä‡∏µ‡∏û": occupation,
        "‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß": ", ".join(diseases),
        "‡πÇ‡∏£‡∏Ñ‡∏≠‡∏∑‡πà‡∏ô‡πÜ": disease_others,
        "‡∏¢‡∏≤": medications,
        "‡∏™‡∏≤‡∏£‡πÄ‡∏™‡∏û‡∏ï‡∏¥‡∏î": substances,
        
        # --- ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞ ---
        "‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞": prev_dizzy,
        "‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞": locals().get("dizzy_disease", ""),
        "‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô": locals().get("dizzy_time", ""),
        "‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞": family_history,
        "‡πÇ‡∏£‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß": locals().get("family_disease", ""),
        # "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢": ", ".join(history),
        # "‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô": ", ".join(triggers),
        # "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°": ", ".join(symptoms),
        "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô (trigger9)": locals().get("food_trigger9", ""),
        "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô‡πÜ": locals().get("other_symptom", ""),

        # --- ‡πÄ‡∏û‡∏®‡∏´‡∏ç‡∏¥‡∏á ---
        "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô": locals().get("period_status", ""),
        "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î": str(locals().get("last_period_date", "")),

        # --- ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞ ---
        "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞": ", ".join(dizzy_types),
        "‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ": locals().get("dizzy_other", ""),
        "‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô": f"{hours_ago} ‡∏ä‡∏° / {days_ago} ‡∏ß‡∏±‡∏ô / {weeks_ago} ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå / {months_ago} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
        "‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô": onset_type,
        "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤": duration_type,
        "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà": dizzy_frequency_text,

        # --- ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏£‡∏Ñ ---
        "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Ñ‡πâ‡∏≤": ", ".join([f"{name} ({score})" for name, score in possible_diseases]),
        "‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≤‡∏Å‡∏≤‡∏£": ", ".join(sorted(selected_codes)),
        
    }
    
    # # --- Export CSV ‡πÅ‡∏ö‡∏ö UTF-8 with BOM ---
    df_user = pd.DataFrame([user_data])
    buffer = io.BytesIO()
    df_user.to_csv(buffer, index=False, encoding='utf-8-sig')
    buffer.seek(0)

    st.download_button(
        label="‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏° (.csv)",
        data=buffer,
        file_name=f"dizzy_questionnaire_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv",
        mime='text/csv'
    )
    
    #  1. ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ Windows)
    pdfmetrics.registerFont(TTFont('Tahoma', 'C:/Windows/Fonts/tahoma.ttf'))
    
        # ---- 1. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ----
    def generate_full_pdf(data: dict, path: str):
        """
        ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏à‡∏≤‡∏Å dict 'data' (key=‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠, value=‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
        ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å field / ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤
        """
        c = canvas.Canvas(path, pagesize=A4)
        pdfmetrics.registerFont(TTFont('Tahoma', 'C:/Windows/Fonts/tahoma.ttf'))
        c.setFont("Tahoma", 16)

        # margin + ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        x_left = 50
        y = 800
        line_height = 22

        # ‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
        c.drawString(x_left, y, "‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞")
        y -= line_height * 2

        for k, v in data.items():
            # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ None / ‡∏ß‡πà‡∏≤‡∏á ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏µ‡∏î -
            if v is None or v == "":
                v = "-"

            # ‡∏ï‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô 90 ‡∏≠‡∏±‡∏Å‡∏©‡∏£
            text = f"{k}: {v}"
            max_len = 90
            while len(text) > max_len:
                c.drawString(x_left, y, text[:max_len])
                text = text[max_len:]
                y -= line_height
                if y < 60:   # ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏û‡∏≠ -> ‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                    c.showPage()
                    c.setFont("Tahoma", 16)
                    y = 800

            c.drawString(x_left, y, text)
            y -= line_height

            # ‡∏ñ‡πâ‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢‡πÉ‡∏´‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤
            if y < 60:
                c.showPage()
                c.setFont("Tahoma", 16)
                y = 800

        c.showPage()
        c.save()
        

    # ---- 2. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏° ----
    with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp_pdf:
        generate_full_pdf(user_data, tmp_pdf.name)   # ‚Üê ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
        with open(tmp_pdf.name, "rb") as f:
            st.download_button(
                label="üìÑ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á)",
                data=f.read(),
                file_name=f"full_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf",
                mime="application/pdf"
            )
    os.unlink(tmp_pdf.name)
    
    
    # ---- 1. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á PDF + ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÇ‡∏£‡∏Ñ ----
def generate_disease_pdf(data: dict, table_df: pd.DataFrame, path: str):
    """
    ‚Ä¢ data      : dict  ‚Üê user_data (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á)
    ‚Ä¢ table_df  : DataFrame  ‚Üê df_final (‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ + ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
    ‚Ä¢ path      : ‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á .pdf
    """
    from reportlab.pdfgen import canvas
    from reportlab.pdfbase import pdfmetrics
    from reportlab.pdfbase.ttfonts import TTFont
    from reportlab.lib.pagesizes import A4

    pdfmetrics.registerFont(TTFont('Tahoma', 'C:/Windows/Fonts/tahoma.ttf'))
    c = canvas.Canvas(path, pagesize=A4)
    c.setFont("Tahoma", 16)

    x_left, y = 50, 800
    line_h = 22

    # ---------- 1. ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å ----------
    c.drawString(x_left, y, "‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞")
    y -= line_h * 2

    for k, v in data.items():
        v = "-" if (v is None or v == "") else str(v)
        text = f"{k}: {v}"
        # ‡∏´‡πà‡∏≠‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏¢‡∏≤‡∏ß > 90 ‡∏≠‡∏±‡∏Å‡∏©‡∏£
        while len(text) > 90:
            c.drawString(x_left, y, text[:90])
            text = text[90:]
            y -= line_h
            if y < 60:
                c.showPage(); c.setFont("Tahoma", 16); y = 800
        c.drawString(x_left, y, text)
        y -= line_h
        if y < 60:
            c.showPage(); c.setFont("Tahoma", 16); y = 800

    # ---------- 2. ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ ----------
    y -= line_h   # ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
    if y < 120:   # ‡∏ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏Ç‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
        c.showPage(); c.setFont("Tahoma", 16); y = 800
    c.drawString(x_left, y, "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á")
    y -= line_h * 1.5

    for _, row in table_df.iterrows():
        disease = row["‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ"]
        symptoms = row["‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á"]
        for line in [disease] + symptoms.split(", "):
            # ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏£‡∏Ñ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤
            if line == disease:
                c.setFont("Tahoma", 16)
                text = f"‚Ä¢ {line}"
            else:
                c.setFont("Tahoma", 14)
                text = f"   - {line}"
            c.drawString(x_left, y, text)
            y -= line_h
            if y < 60:
                c.showPage(); c.setFont("Tahoma", 16); y = 800

    c.showPage()
    c.save()
    
    # ---- 2. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏° ----
    with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp_pdf:
        generate_disease_pdf(user_data, df_final, tmp_pdf.name)   # ‚Üê ‡∏™‡πà‡∏á df_final ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ

        with open(tmp_pdf.name, "rb") as f:
            st.download_button(
                label="üìÑ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF (‡πÅ‡∏ö‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ç‡∏≠‡∏á(‡πÇ‡∏£‡∏Ñ))",
                data=f.read(),
                file_name=f"full_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf",
                mime="application/pdf"
            )
    os.unlink(tmp_pdf.name)



    # #  2. ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏î‡πâ‡∏ß‡∏¢‡∏ü‡∏≠‡∏ô‡∏ï‡πå Tahoma
    # def generate_thai_pdf(path, gender, age, dizzy_types, selected_codes, possible_diseases):
    #     c = canvas.Canvas(path, pagesize=A4)
    #     c.setFont("Tahoma", 16)
        
    #     text = c.beginText(40, 800)
    #     text.textLine("‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞")
    #     text.textLine(f"‡πÄ‡∏û‡∏®: {gender}")
    #     text.textLine(f"‡∏≠‡∏≤‡∏¢‡∏∏: {age}")
    #     text.textLine("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞: " + ", ".join(dizzy_types))
    #     text.textLine("‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:")
    #     for code in sorted(selected_codes):
    #         text.textLine(f" - {code}")
    #     text.textLine("‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Ñ‡πâ‡∏≤:")
    #     for d, score in possible_diseases:
    #         text.textLine(f" - {d} ({score})")
        
    #     c.drawText(text)
    #     c.showPage()
    #     c.save()

    # #  3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF ‡∏ú‡πà‡∏≤‡∏ô Streamlit
    # with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp_pdf:
    #     generate_thai_pdf(tmp_pdf.name, gender, age, dizzy_types, selected_codes, possible_diseases)
    #     with open(tmp_pdf.name, "rb") as f:
    #         st.download_button(
    #             label="üìÑ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (ReportLab)",
    #             data=f.read(),
    #             file_name=f"summary_dizzy_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf",
    #             mime="application/pdf"
    #         )
    # os.unlink(tmp_pdf.name)
    
    st.markdown(
    "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>üîª ‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 11 : Eye Tracking</span>",
    unsafe_allow_html=True
)
    


with tab11:  
        st.title("üëÅÔ∏è Eye Movement Detection with Logs & Analytics")
        
                # ---------- Instruction Card : Tab 11 ----------
        st.markdown("""
        <style>
        .guide-card{
        background:rgba(255,255,255,0.25);
        border-radius:18px;
        box-shadow:0 8px 32px rgba(31,38,135,.15);
        backdrop-filter:blur(12px);
        -webkit-backdrop-filter:blur(12px);
        border:1px solid rgba(255,255,255,0.18);
        padding:2.5rem;margin-bottom:32px;
        color:#0f172a;font-size:1.4rem !important;line-height:1.9rem;
        }
        .guide-card h1{font-size:2.8rem !important;margin-bottom:1.2rem;font-weight:800;}
        .guide-card ul{padding-left:2rem;margin:0;}
        .guide-card li{margin:10px 0;font-size:1.4rem;}
        .guide-card li::marker{color:#38bdf8;font-size:1.6rem;}
        </style>

        <div class="guide-card">
        <h1>üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚Äì Eye Tracking (Tab 11)</h1>

        <ul>
            <li>‡∏Å‡∏î ‚Äú<strong>‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï</strong>‚Äù ‡πÉ‡∏´‡πâ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á <strong>‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏Ñ‡∏°</strong> ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ Pop-up ‡∏ñ‡∏≤‡∏°</li>
            <li>‡∏ô‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà <strong>‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á</strong> ‡∏£‡∏∞‡∏¢‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 30‚Äì50 ‡∏ã‡∏°.</li>
            <li>‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á <em>‡∏†‡∏≤‡∏û‡∏™‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏£‡∏≠‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏ï‡∏≤</em><br>
                ‚ñ∏ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ï‡πâ‡∏Å‡∏£‡∏≠‡∏ö‡∏à‡∏∞‡∏ö‡∏≠‡∏Å‡∏ó‡∏¥‡∏®‡∏™‡∏≤‡∏¢‡∏ï‡∏≤ ‚¨ÖÔ∏è ‚û°Ô∏è ‚¨ÜÔ∏è ‚úÖ</li>
            <li>‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤‡πÅ‡∏™‡∏î‡∏á <strong>‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥</strong> & ‚Äú<em>Eye Movement Log</em>‚Äù</li>
            <li>‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏ô‡∏†‡∏≤‡∏û‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô <em>‡πÄ‡∏õ‡πâ‡∏≤‡∏ù‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡πà‡∏á‡∏™‡∏≤‡∏¢‡∏ï‡∏≤</em><br>
                ‚ñ∏ ‡∏•‡∏≠‡∏á‡∏°‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö</li>
            <li>‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ <strong>‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î CSV</strong> ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)

        # ---------- Red Notice : ‡πÑ‡∏õ Tab 12 ----------
        st.markdown(
            "<span style='color:#b91c1c;font-size:1.6rem;font-weight:bold;'>üîª ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß&nbsp;&nbsp;‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Tab 12 : Motion Tracking (IMU)</span>",
            unsafe_allow_html=True
        )


        # Always run camera (no checkbox)
        col1, col2 = st.columns(2)
        with col1:
            FRAME_WINDOW = st.image([])
        with col2:
            summary_container = st.empty()

        mp_face_mesh = mp.solutions.face_mesh
        face_mesh = mp_face_mesh.FaceMesh(max_num_faces=1, refine_landmarks=True)

        LEFT_EYE_IDX = [362, 385, 387, 263, 373, 380]
        RIGHT_EYE_IDX = [33, 160, 158, 133, 153, 144]

        cap = cv2.VideoCapture(0)
        eye_log = []
        direction_memory = ""
        direction_counter = 0

        def detect_pupil_direction(eye_img):
            gray = cv2.cvtColor(eye_img, cv2.COLOR_BGR2GRAY)
            gray = cv2.GaussianBlur(gray, (7, 7), 0)
            _, thresh = cv2.threshold(gray, 50, 255, cv2.THRESH_BINARY_INV)

            contours, _ = cv2.findContours(thresh, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
            if contours:
                c = max(contours, key=cv2.contourArea)
                M = cv2.moments(c)
                if M['m00'] != 0:
                    cx = int(M['m10'] / M['m00'])
                    w = eye_img.shape[1]
                    ratio = cx / w
                    if ratio < 0.35:
                        return "üëà Looking Left"
                    elif ratio > 0.65:
                        return "üëâ Looking Right"
                    else:
                        return "‚¨ÜÔ∏è Looking Center"
            return "Eye Detected"

        # Limit frame count to prevent overload
        frame_count = 0
        MAX_FRAMES = 500  # Adjust as needed (e.g., 1000)

        while cap.isOpened() and frame_count < MAX_FRAMES:
            ret, frame = cap.read()
            if not ret:
                break

            frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            results = face_mesh.process(frame_rgb)

            direction_text = "No face detected"

            if results.multi_face_landmarks:
                landmarks = results.multi_face_landmarks[0].landmark
                h, w, _ = frame.shape

                left_eye = [(int(landmarks[i].x * w), int(landmarks[i].y * h)) for i in LEFT_EYE_IDX]
                right_eye = [(int(landmarks[i].x * w), int(landmarks[i].y * h)) for i in RIGHT_EYE_IDX]

                for pt in left_eye + right_eye:
                    cv2.circle(frame, pt, 2, (0, 255, 0), -1)

                def crop_eye(eye_points):
                    x_vals = [pt[0] for pt in eye_points]
                    y_vals = [pt[1] for pt in eye_points]
                    x_min, x_max = max(min(x_vals) - 5, 0), min(max(x_vals) + 5, w)
                    y_min, y_max = max(min(y_vals) - 5, 0), min(max(y_vals) + 5, h)
                    return frame[y_min:y_max, x_min:x_max]

                left_crop = crop_eye(left_eye)
                right_crop = crop_eye(right_eye)

                left_dir = detect_pupil_direction(left_crop) if left_crop.size > 0 else ""
                right_dir = detect_pupil_direction(right_crop) if right_crop.size > 0 else ""

                if left_dir == right_dir and left_dir != "":
                    direction_text = left_dir
                else:
                    direction_text = left_dir or right_dir or "No Eye Detected"

                if direction_text == direction_memory:
                    direction_counter += 1
                else:
                    direction_counter = 0
                direction_memory = direction_text

                if direction_counter > 20:
                    direction_text += " ‚úÖ Action Triggered"

                eye_log.append({
                    "time": datetime.now().strftime("%H:%M:%S"),
                    "direction": direction_text
                })
                
                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏à‡∏∏‡∏î‡πÅ‡∏î‡∏á
                target_positions = [(100, 100), (500, 100), (300, 250), (100, 400), (500, 400)]
                current_target_index = frame_count // 100 % len(target_positions)  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏∏‡∏Å 100 ‡πÄ‡∏ü‡∏£‡∏°
                target_pos = target_positions[current_target_index]

                # ‡∏ß‡∏≤‡∏î‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏ô (‡πÉ‡∏ä‡πâ‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™)
                overlay = frame.copy()
                cv2.circle(overlay, target_pos, 20, (0, 0, 255), -1)
                alpha_overlay = 0.5
                frame = cv2.addWeighted(overlay, alpha_overlay, frame, 1 - alpha_overlay, 0)

            # Display live frame
            cv2.putText(frame, direction_text, (30, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)
            FRAME_WINDOW.image(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))

            frame_count += 1

        cap.release()
        st.success("‚úÖ Camera Stopped")

        df = pd.DataFrame(eye_log)
        if not df.empty:
            st.subheader("üìú Eye Movement Log")
            st.dataframe(df.tail(50))

            st.subheader("üìä Summary of Eye Direction")
            counts = df["direction"].value_counts()
            fig, ax = plt.subplots()
            counts.plot(kind="bar", ax=ax, color='lightblue')
            ax.set_title("Summary of Eye Movements")
            ax.set_ylabel("Count")
            ax.set_xlabel("Direction")
            summary_container.pyplot(fig)

            csv = df.to_csv(index=False).encode()
            st.download_button("üíæ Download Log as CSV", csv, "eye_log.csv", "text/csv")
            
            
with tab12:
    # ---------- PAGE HEADER ----------
    st.title("üìà Real-time Motion Tracking from IMU (M5StickC)")
    st.markdown("""
- ‡∏ï‡πà‡∏≠‡πÑ‡∏ü‡πÉ‡∏´‡πâ **M5StickC** ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MQTT  
  ‚ñ∏ **Broker** : `broker.emqx.io`   ‚ñ∏ **Topic** : `thammasat/aueaphum/sensor`  
- ‡∏ß‡∏≤‡∏á‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà **‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏®‡∏µ‡∏£‡∏©‡∏∞** ‡∏´‡∏£‡∏∑‡∏≠ **‡∏Ç‡πâ‡∏≠‡∏°‡∏∑‡∏≠**  
- ‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü **AX AY AZ GX GY GZ** (Smooth Œ± = 0.1)  
- ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏ö‡∏≠‡∏Å **Pitch / Roll / Yaw** ‡πÅ‡∏•‡∏∞ ‡∏ó‡∏¥‡∏®‡∏®‡∏µ‡∏£‡∏©‡∏∞ üëÅ  
""")

    # ---------- MQTT CONFIG ----------
    MQTT_BROKER = "broker.emqx.io"
    MQTT_PORT   = 1883
    MQTT_TOPIC  = "thammasat/aueaphum/sensor"

    # ---------- PARAMETERS ----------
    window_size = 150       # ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü
    alpha       = 0.1       # smoothing factor
    REFRESH_EVERY = 10      # ‡∏Å‡∏µ‡πà‡πÄ‡∏ü‡∏£‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á+‡∏™‡∏£‡∏∏‡∏õ

    # ---------- DATA STRUCTURE ----------
    data_dict = {k: deque(maxlen=window_size) for k in
                 ['AX','AY','AZ','GX','GY','GZ','Time']}
    smoothed  = {k: 0.0 for k in ['AX','AY','AZ','GX','GY','GZ']}
    imu_log   = []                          # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏∏‡∏Å‡πÄ‡∏ü‡∏£‡∏°

    # ---------- PLACEHOLDERS ----------
    cols = st.columns(2)
    chart_ph = {                           # plotly charts
        'AX': cols[0].empty(), 'AY': cols[0].empty(), 'AZ': cols[0].empty(),
        'GX': cols[1].empty(), 'GY': cols[1].empty(), 'GZ': cols[1].empty()
    }
    head_box            = st.empty()      # Pitch/Roll/Yaw + Direction
    log_ph              = st.empty()      # ‡∏ï‡∏≤‡∏£‡∏≤‡∏á 30 ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    summary_ph          = st.empty()      # Avg/Max/Min
    trend_ph            = st.empty()      # ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÇ‡∏£‡∏Ñ
    download_ph         = st.empty()      # ‡∏õ‡∏∏‡πà‡∏° CSV (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏ö‡∏™‡∏ï‡∏£‡∏µ‡∏°)

    # ---------- MQTT CALLBACK ----------
    def on_message(client, userdata, msg):
        try:
            parts = msg.payload.decode().split(',')
            parsed = {kv.split(':')[0]: float(kv.split(':')[1]) for kv in parts}
            now = time.time()
            for k in smoothed:
                smoothed[k] = alpha*parsed[k] + (1-alpha)*smoothed[k]
                data_dict[k].append(smoothed[k])
            data_dict['Time'].append(now)
        except Exception as e:
            print("Parse error:", e)

    def start_mqtt():
        client = mqtt.Client()
        client.on_message = on_message
        client.connect(MQTT_BROKER, MQTT_PORT, 60)
        client.subscribe(MQTT_TOPIC)
        client.loop_start()

    if 'mqtt_started' not in st.session_state:
        threading.Thread(target=start_mqtt, daemon=True).start()
        st.session_state['mqtt_started'] = True

    # ---------- HELPER ----------
    def calc_angles(ax, ay, az, gx, gy, gz):
        pitch = math.degrees(math.atan2(ax, math.sqrt(ay**2+az**2)))
        roll  = math.degrees(math.atan2(ay, math.sqrt(ax**2+az**2)))
        yaw   = gz   # (‡πÉ‡∏ä‡πâ Gyro-Z ‡πÅ‡∏ó‡∏ô)
        return pitch, roll, yaw

    def head_dir(p, r, y, th=15):
        if y >  th: return "Looking Right"
        if y < -th: return "Looking Left"
        if p >  th: return "Looking Up"
        if p < -th: return "Looking Down"
        return "Looking Center"

    # ---------- MAIN LOOP ----------
    counter   = 0
    RUN_TIME  = 180          # ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (3 ‡∏ô‡∏≤‡∏ó‡∏µ) : ‡∏à‡∏ö‡∏™‡∏ï‡∏£‡∏µ‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    start_ts  = time.time()

    while time.time() - start_ts < RUN_TIME:
        time.sleep(0.25)
        counter += 1

        # -- Plot 6 ‡πÅ‡∏Å‡∏ô --
        for k in chart_ph:
            fig = go.Figure()
            fig.add_trace(go.Scatter(x=list(data_dict['Time']),
                                     y=list(data_dict[k]),
                                     mode='lines'))
            fig.update_layout(title=f"{k} (Œ± = {alpha})",
                              height=220, margin=dict(l=10,r=10,t=30,b=25),
                              uirevision=k)
            chart_ph[k].plotly_chart(fig, use_container_width=True,
                                     key=f"{k}_{counter}")

        # -- ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πá‡∏ß‡∏ô‡∏ï‡πà‡∏≠ --
        if not data_dict['Time']:
            continue

        # -- ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ü‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î --
        ax,ay,az = data_dict['AX'][-1], data_dict['AY'][-1], data_dict['AZ'][-1]
        gx,gy,gz = data_dict['GX'][-1], data_dict['GY'][-1], data_dict['GZ'][-1]
        pitch, roll, yaw = calc_angles(ax,ay,az,gx,gy,gz)
        direction        = head_dir(pitch, roll, yaw)

        head_box.markdown(f"""
        <div style="font-size:28px;font-weight:bold;color:#336699;
             background:#f0f9ff;padding:10px;border-radius:10px;">
            üß† Head Motion<br>
            üëÅ {direction}<br>
            <span style='font-size:16px;'>
            Pitch {pitch:.1f}¬∞ ‚Ä¢ Roll {roll:.1f}¬∞ ‚Ä¢ Yaw {yaw:.1f}¬∞
            </span>
        </div>""", unsafe_allow_html=True)

        # -- LOG ‡πÄ‡∏ü‡∏£‡∏° --
        imu_log.append({
            "timestamp": datetime.now().strftime("%H:%M:%S"),
            "pitch": pitch, "roll": roll, "yaw": yaw,
            "direction": direction.replace("Looking ","")
        })

        # -- ‡∏ó‡∏∏‡∏Å REFRESH_EVERY ‡πÄ‡∏ü‡∏£‡∏° : ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á/‡∏™‡∏£‡∏∏‡∏õ/‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° --
        if counter % REFRESH_EVERY == 0:
            df = pd.DataFrame(imu_log)
            log_ph.dataframe(df.tail(30), use_container_width=True)

            stats = df[["pitch","roll","yaw"]].agg(["mean","max","min"]).round(2)
            summary_ph.markdown(f"""
|  | Pitch | Roll | Yaw |
|--|------:|-----:|----:|
|Avg| {stats.loc['mean','pitch']}¬∞ | {stats.loc['mean','roll']}¬∞ | {stats.loc['mean','yaw']}¬∞ |
|Max| {stats.loc['max','pitch']}¬∞ | {stats.loc['max','roll']}¬∞ | {stats.loc['max','yaw']}¬∞ |
|Min| {stats.loc['min','pitch']}¬∞ | {stats.loc['min','roll']}¬∞ | {stats.loc['min','yaw']}¬∞ |
""")

            # ---- ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÇ‡∏£‡∏Ñ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏¢‡∏≤‡∏ö ----
            avg_p, avg_r, avg_y = stats.loc['mean','pitch'], stats.loc['mean','roll'], stats.loc['mean','yaw']
            trends = []
            if abs(avg_y) > 25:
                trends.append("‚óºÔ∏è *Vestibular neuritis* ‚Äî ‡πÄ‡∏ö‡∏µ‡πà‡∏¢‡∏á‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤‡∏ä‡∏±‡∏î")
            if abs(avg_p) > 25:
                trends.append("‚óºÔ∏è *BPPV* ‚Äî ‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á‡∏®‡∏µ‡∏£‡∏©‡∏∞")
            if avg_r > 20:
                trends.append("‚óºÔ∏è *Meniere‚Äôs disease* ‚Äî ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏´‡∏°‡∏∏‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡πÉ‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á")
            if not trends:
                trends.append("‚óºÔ∏è *‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á*")

            trend_ph.markdown("#### ü©∫ ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÇ‡∏£‡∏Ñ‡∏à‡∏≤‡∏Å Motion (‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô)")
            trend_ph.markdown("\n".join(trends))

    # ---------- END STREAM ----------
    st.success("‚úÖ ‡∏™‡∏ï‡∏£‡∏µ‡∏°‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß (‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 3 ‡∏ô‡∏≤‡∏ó‡∏µ)")

    # ---------- DOWNLOAD CSV ----------
    if imu_log:
        csv_bytes = pd.DataFrame(imu_log).to_csv(index=False).encode("utf-8-sig")
        download_ph.download_button(
            "üíæ Download IMU Pitch-Roll-Yaw (CSV)",
            csv_bytes,
            file_name=f"imu_log_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv",
            mime="text/csv"
        )
    else:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡πá‡∏ï MQTT)")
          
            
# with tab12:
#     st.title("üìà Real-time Motion Tracking from IMU (M5StickC)")
#     st.markdown("""
#     - ‡∏ï‡πà‡∏≠‡πÑ‡∏ü‡πÉ‡∏´‡πâ **M5StickC** ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô **MQTT**

#     ‚ñ∏ **Broker** : `broker.emqx.io`  
#     ‚ñ∏ **Topic** : `thammasat/aueaphum/sensor`

#     - ‡πÉ‡∏´‡πâ‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á **‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏∑‡∏≠** (‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢)

#     - ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏Å‡∏£‡∏≤‡∏ü **AX AY AZ GX GY GZ** ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå

#     - ‡∏Ñ‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡πÅ‡∏Å‡∏ô‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö **Smooth** (Œ± = 0.1) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏£‡∏ö‡∏Å‡∏ß‡∏ô

#     - ‡πÅ‡∏ñ‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á **Pitch / Roll / Yaw** ‡πÅ‡∏•‡∏∞‡∏ö‡∏≠‡∏Å‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏®‡∏µ‡∏£‡∏©‡∏∞  
#     ‚ñ∏ ‚ÄúüëÅ Looking Left / Right / Up / Down / Center‚Äù

#     - ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤  
#     ‚ñ∏ ‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà  
#     ‚ñ∏ Wi-Fi & MQTT ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

#     - ‚öôÔ∏è ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö `window_size` ‡∏´‡∏£‡∏∑‡∏≠ `alpha` ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏≤‡∏ü‡∏ô‡∏∏‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô/‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô
#     """)

#     # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
#     st.markdown(
#         "<span style='color:#b91c1c; font-size:1.6rem; font-weight:bold;'>‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà Tab ‡πÉ‡∏î‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô</span>",
#         unsafe_allow_html=True
#     )

#     st.markdown("‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Pitch, Roll, Yaw ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏®‡∏µ‡∏£‡∏©‡∏∞")

#     # ---------- MQTT CONFIG ----------
#     MQTT_BROKER = "broker.emqx.io"
#     MQTT_PORT = 1883
#     MQTT_TOPIC = "thammasat/aueaphum/sensor"

#     # ---------- PARAMETERS ----------
#     window_size = 150
#     alpha = 0.1

#     data_dict = {
#         'AX': deque(maxlen=window_size),
#         'AY': deque(maxlen=window_size),
#         'AZ': deque(maxlen=window_size),
#         'GX': deque(maxlen=window_size),
#         'GY': deque(maxlen=window_size),
#         'GZ': deque(maxlen=window_size),
#         'Time': deque(maxlen=window_size)
#     }
#     smoothed = {k: 0.0 for k in ['AX', 'AY', 'AZ', 'GX', 'GY', 'GZ']}

#     # ---------- MQTT CALLBACK ----------
#     def on_message(client, userdata, msg):
#         try:
#             payload = msg.payload.decode()
#             parts = payload.split(',')
#             parsed = {kv.split(':')[0]: float(kv.split(':')[1]) for kv in parts}
#             now = time.time()
#             for k in smoothed:
#                 smoothed[k] = alpha * parsed[k] + (1 - alpha) * smoothed[k]
#                 data_dict[k].append(smoothed[k])
#             data_dict['Time'].append(now)
#         except Exception as e:
#             print("Parse error:", e)

#     # ---------- START MQTT THREAD ----------
#     def start_mqtt():
#         client = mqtt.Client()
#         client.on_message = on_message
#         client.connect(MQTT_BROKER, MQTT_PORT, 60)
#         client.subscribe(MQTT_TOPIC)
#         client.loop_start()

#     if 'mqtt_started' not in st.session_state:
#         threading.Thread(target=start_mqtt, daemon=True).start()
#         st.session_state['mqtt_started'] = True

#     # ---------- STREAMLIT UI ----------
#     st.set_page_config(page_title="Smooth IMU Viewer", layout="wide")
#     st.title("üì° Ultra Smooth Real-time IMU Sensor from M5StickC")

#     cols = st.columns(2)
#     placeholders = {
#         'AX': cols[0].empty(), 'AY': cols[0].empty(), 'AZ': cols[0].empty(),
#         'GX': cols[1].empty(), 'GY': cols[1].empty(), 'GZ': cols[1].empty()
#     }
#     eye_info_box = st.empty()

#     # ---------- HELPER FUNCTIONS ----------
#     def calculate_angles(ax, ay, az, gx, gy, gz):
#         pitch = math.atan2(ax, math.sqrt(ay ** 2 + az ** 2)) * (180.0 / math.pi)
#         roll = math.atan2(ay, math.sqrt(ax ** 2 + az ** 2)) * (180.0 / math.pi)
#         yaw = gz  # ‡πÉ‡∏ä‡πâ gyroscope ‡πÅ‡∏ó‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ yaw ‡∏à‡∏£‡∏¥‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ sensor fusion)
#         return pitch, roll, yaw

#     def interpret_head_direction(pitch, roll, yaw, threshold=15):
#         if yaw > threshold:
#             return "üëÅ Looking Right"
#         elif yaw < -threshold:
#             return "üëÅ Looking Left"
#         elif pitch > threshold:
#             return "üëÅ Looking Up"
#         elif pitch < -threshold:
#             return "üëÅ Looking Down"
#         else:
#             return "üëÅ Looking Center"

#     # ---------- MAIN LOOP ----------
#     counter = 0
#     while True:
#         time.sleep(0.2)
#         counter += 1

#         for k in placeholders:
#             x = list(data_dict['Time'])
#             y = list(data_dict[k])

#             fig = go.Figure()
#             fig.add_trace(go.Scatter(x=x, y=y, mode='lines', name=k))
#             fig.update_layout(
#                 title=f"{k} (Smoothed Œ±={alpha})",
#                 xaxis_title="Time",
#                 yaxis_title=k,
#                 height=250,
#                 margin=dict(l=20, r=20, t=30, b=30),
#                 uirevision=k
#             )

#             placeholders[k].plotly_chart(fig, use_container_width=True, key=f"{k}_chart_{counter}")

#         # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì pitch, roll, yaw ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á
#         ax = data_dict['AX'][-1] if data_dict['AX'] else 0.0
#         ay = data_dict['AY'][-1] if data_dict['AY'] else 0.0
#         az = data_dict['AZ'][-1] if data_dict['AZ'] else 0.0
#         gx = data_dict['GX'][-1] if data_dict['GX'] else 0.0
#         gy = data_dict['GY'][-1] if data_dict['GY'] else 0.0
#         gz = data_dict['GZ'][-1] if data_dict['GZ'] else 0.0

#         pitch, roll, yaw = calculate_angles(ax, ay, az, gx, gy, gz)
#         direction = interpret_head_direction(pitch, roll, yaw)

#         eye_info_box.markdown(f"""
#         <div style="font-size:28px; font-weight:bold; color:#336699; padding:10px; background-color:#f0f9ff; border-radius:10px;">
#             üß† Head Motion Analysis<br>
#             {direction}<br>
#             <span style='font-size:16px;'>Pitch = {pitch:.2f}¬∞, Roll = {roll:.2f}¬∞, Yaw = {yaw:.2f}</span>
#         </div>
#         """, unsafe_allow_html=True)
        
        
